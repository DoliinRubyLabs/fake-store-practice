/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji'

export interface Config {
  auth: {
    users: UserAuthOperations
  }
  blocks: {}
  collections: {
    layout: Layout
    pages: Page
    media: Media
    users: User
    'payload-locked-documents': PayloadLockedDocument
    'payload-preferences': PayloadPreference
    'payload-migrations': PayloadMigration
  }
  collectionsJoins: {}
  collectionsSelect: {
    layout: LayoutSelect<false> | LayoutSelect<true>
    pages: PagesSelect<false> | PagesSelect<true>
    media: MediaSelect<false> | MediaSelect<true>
    users: UsersSelect<false> | UsersSelect<true>
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>
  }
  db: {
    defaultIDType: number
  }
  globals: {}
  globalsSelect: {}
  locale:
    | 'en'
    | 'fr'
    | 'de'
    | 'no'
    | 'es'
    | 'pt'
    | 'pl'
    | 'da-DK'
    | 'cs'
    | 'it'
    | 'ro'
    | 'sv'
    | 'el'
    | 'nl'
    | 'hr'
    | 'et-EE'
    | 'hu'
    | 'lv'
    | 'sl'
    | 'lt'
    | 'mt-MT'
    | 'sk'
    | 'fi'
    | 'bg'
    | 'pt-BR'
    | 'ga-IE'
    | 'es-MX'
    | 'tr'
    | 'ar'
    | 'fa-IR'
    | 'ku'
    | 'ru'
    | 'ko'
    | 'ja'
    | 'th'
    | 'zh'
  user: User & {
    collection: 'users'
  }
  jobs: {
    tasks: unknown
    workflows: unknown
  }
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string
    password: string
  }
  login: {
    email: string
    password: string
  }
  registerFirstUser: {
    email: string
    password: string
  }
  unlock: {
    email: string
    password: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "layout".
 */
export interface Layout {
  id: number
  name: string
  sections?:
    | (
        | {
            logo?: (number | null) | Media
            menu: {
              label?: string | null
              url?: string | null
              id?: string | null
            }[]
            id?: string | null
            blockName?: string | null
            blockType: 'header'
          }
        | {
            logo?: (number | null) | Media
            menuColumns: {
              columnTitle: string
              links: {
                label: string
                url: string
                openInNewTab?: boolean | null
                id?: string | null
              }[]
              id?: string | null
            }[]
            copyright?: string | null
            alignment?: ('left' | 'center' | 'right') | null
            id?: string | null
            blockName?: string | null
            blockType: 'footer'
          }
      )[]
    | null
  meta?: {
    title?: string | null
    description?: string | null
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media
  }
  slug?: string | null
  slugLock?: boolean | null
  updatedAt: string
  createdAt: string
  _status?: ('draft' | 'published') | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number
  alt?: string | null
  updatedAt: string
  createdAt: string
  url?: string | null
  thumbnailURL?: string | null
  filename?: string | null
  mimeType?: string | null
  filesize?: number | null
  width?: number | null
  height?: number | null
  focalX?: number | null
  focalY?: number | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number
  name: string
  sections?:
    | (
        | {
            title?: string | null
            content: {
              root: {
                type: string
                children: {
                  type: string
                  version: number
                  [k: string]: unknown
                }[]
                direction: ('ltr' | 'rtl') | null
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
                indent: number
                version: number
              }
              [k: string]: unknown
            }
            alignment?: ('left' | 'center' | 'right') | null
            id?: string | null
            blockName?: string | null
            blockType: 'textContent'
          }
        | {
            title: string
            description: {
              root: {
                type: string
                children: {
                  type: string
                  version: number
                  [k: string]: unknown
                }[]
                direction: ('ltr' | 'rtl') | null
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
                indent: number
                version: number
              }
              [k: string]: unknown
            }
            image?: (number | null) | Media
            layout?: ('image-left' | 'image-right' | 'image-top' | 'image-bottom') | null
            alignment?: ('left' | 'center' | 'right') | null
            id?: string | null
            blockName?: string | null
            blockType: 'titleDescriptionImage'
          }
        | {
            image?: (number | null) | Media
            caption?: string | null
            alt?: string | null
            size?: ('small' | 'medium' | 'large' | 'full') | null
            alignment?: ('left' | 'center' | 'right') | null
            id?: string | null
            blockName?: string | null
            blockType: 'imageBlock'
          }
        | {
            title?: string | null
            images: {
              image: number | Media
              caption?: string | null
              alt?: string | null
              id?: string | null
            }[]
            layout?: ('grid' | 'masonry' | 'carousel') | null
            columns?: ('2' | '3' | '4') | null
            id?: string | null
            blockName?: string | null
            blockType: 'imageGallery'
          }
        | {
            title: string
            description?: string | null
            fields: {
              fieldType: 'text' | 'email' | 'phone' | 'textarea' | 'select' | 'checkbox' | 'radio'
              label: string
              placeholder?: string | null
              required?: boolean | null
              options?:
                | {
                    label: string
                    value: string
                    id?: string | null
                  }[]
                | null
              id?: string | null
            }[]
            submitButtonText?: string | null
            successMessage?: string | null
            emailNotification?: {
              enabled?: boolean | null
              recipient?: string | null
              subject?: string | null
            }
            id?: string | null
            blockName?: string | null
            blockType: 'formBuilder'
          }
      )[]
    | null
  meta?: {
    title?: string | null
    description?: string | null
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media
  }
  slug?: string | null
  slugLock?: boolean | null
  updatedAt: string
  createdAt: string
  _status?: ('draft' | 'published') | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number
  name?: string | null
  role?: ('admin' | 'root') | null
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number
  document?:
    | ({
        relationTo: 'layout'
        value: number | Layout
      } | null)
    | ({
        relationTo: 'pages'
        value: number | Page
      } | null)
    | ({
        relationTo: 'media'
        value: number | Media
      } | null)
    | ({
        relationTo: 'users'
        value: number | User
      } | null)
  globalSlug?: string | null
  user: {
    relationTo: 'users'
    value: number | User
  }
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number
  user: {
    relationTo: 'users'
    value: number | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "layout_select".
 */
export interface LayoutSelect<T extends boolean = true> {
  name?: T
  sections?:
    | T
    | {
        header?:
          | T
          | {
              logo?: T
              menu?:
                | T
                | {
                    label?: T
                    url?: T
                    id?: T
                  }
              id?: T
              blockName?: T
            }
        footer?:
          | T
          | {
              logo?: T
              menuColumns?:
                | T
                | {
                    columnTitle?: T
                    links?:
                      | T
                      | {
                          label?: T
                          url?: T
                          openInNewTab?: T
                          id?: T
                        }
                    id?: T
                  }
              copyright?: T
              alignment?: T
              id?: T
              blockName?: T
            }
      }
  meta?:
    | T
    | {
        title?: T
        description?: T
        image?: T
      }
  slug?: T
  slugLock?: T
  updatedAt?: T
  createdAt?: T
  _status?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  name?: T
  sections?:
    | T
    | {
        textContent?:
          | T
          | {
              title?: T
              content?: T
              alignment?: T
              id?: T
              blockName?: T
            }
        titleDescriptionImage?:
          | T
          | {
              title?: T
              description?: T
              image?: T
              layout?: T
              alignment?: T
              id?: T
              blockName?: T
            }
        imageBlock?:
          | T
          | {
              image?: T
              caption?: T
              alt?: T
              size?: T
              alignment?: T
              id?: T
              blockName?: T
            }
        imageGallery?:
          | T
          | {
              title?: T
              images?:
                | T
                | {
                    image?: T
                    caption?: T
                    alt?: T
                    id?: T
                  }
              layout?: T
              columns?: T
              id?: T
              blockName?: T
            }
        formBuilder?:
          | T
          | {
              title?: T
              description?: T
              fields?:
                | T
                | {
                    fieldType?: T
                    label?: T
                    placeholder?: T
                    required?: T
                    options?:
                      | T
                      | {
                          label?: T
                          value?: T
                          id?: T
                        }
                    id?: T
                  }
              submitButtonText?: T
              successMessage?: T
              emailNotification?:
                | T
                | {
                    enabled?: T
                    recipient?: T
                    subject?: T
                  }
              id?: T
              blockName?: T
            }
      }
  meta?:
    | T
    | {
        title?: T
        description?: T
        image?: T
      }
  slug?: T
  slugLock?: T
  updatedAt?: T
  createdAt?: T
  _status?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T
  updatedAt?: T
  createdAt?: T
  url?: T
  thumbnailURL?: T
  filename?: T
  mimeType?: T
  filesize?: T
  width?: T
  height?: T
  focalX?: T
  focalY?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T
  role?: T
  updatedAt?: T
  createdAt?: T
  email?: T
  resetPasswordToken?: T
  resetPasswordExpiration?: T
  salt?: T
  hash?: T
  loginAttempts?: T
  lockUntil?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T
  globalSlug?: T
  user?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T
  key?: T
  value?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T
  batch?: T
  updatedAt?: T
  createdAt?: T
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
