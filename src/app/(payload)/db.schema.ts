/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:db-schema` to regenerate this file.
 */

import type {} from '@payloadcms/db-postgres'
import {
  pgTable,
  index,
  uniqueIndex,
  foreignKey,
  integer,
  uuid,
  text,
  varchar,
  boolean,
  jsonb,
  timestamp,
  serial,
  numeric,
  pgEnum,
} from '@payloadcms/db-postgres/drizzle/pg-core'
import { sql, relations } from '@payloadcms/db-postgres/drizzle'
export const enum__locales = pgEnum('enum__locales', ['en', 'de', 'ar'])
export const action_type = pgEnum('action_type', [
  'link',
  'linkIcon',
  'linkIconOnly',
  'button',
  'buttonIcon',
  'buttonIconOnly',
])
export const icon_position = pgEnum('icon_position', ['left', 'right'])
export const link_color = pgEnum('link_color', ['foreground', 'primary', 'secondary', 'success', 'warning'])
export const link_variant = pgEnum('link_variant', ['default', 'underline'])
export const btn_color = pgEnum('btn_color', ['default', 'primary', 'secondary', 'success', 'danger', 'warning'])
export const btn_variant = pgEnum('btn_variant', ['light', 'solid', 'ghost', 'faded', 'flat', 'shadow', 'bordered'])
export const content_align = pgEnum('content_align', ['left', 'center', 'right'])
export const text_align = pgEnum('text_align', ['left', 'center', 'right'])
export const card_block_type = pgEnum('card_block_type', ['cards', 'list'])
export const field_type = pgEnum('field_type', [
  'textInput',
  'emailInput',
  'phoneInput',
  'textareaInput',
  'select',
  'checkbox',
  'radio',
])
export const enum_pages_status = pgEnum('enum_pages_status', ['draft', 'published'])
export const enum__pages_v_version_status = pgEnum('enum__pages_v_version_status', ['draft', 'published'])
export const enum__pages_v_published_locale = pgEnum('enum__pages_v_published_locale', ['en', 'de', 'ar'])
export const include_products = pgEnum('include_products', ['byCategorySlug'])
export const enum_categories_status = pgEnum('enum_categories_status', ['draft', 'published'])
export const enum__categories_v_version_status = pgEnum('enum__categories_v_version_status', ['draft', 'published'])
export const enum__categories_v_published_locale = pgEnum('enum__categories_v_published_locale', ['en', 'de', 'ar'])
export const enum_products_status = pgEnum('enum_products_status', ['draft', 'published'])
export const enum__products_v_version_status = pgEnum('enum__products_v_version_status', ['draft', 'published'])
export const enum__products_v_published_locale = pgEnum('enum__products_v_published_locale', ['en', 'de', 'ar'])
export const enum_templates_status = pgEnum('enum_templates_status', ['draft', 'published'])
export const enum__templates_v_version_status = pgEnum('enum__templates_v_version_status', ['draft', 'published'])
export const enum__templates_v_published_locale = pgEnum('enum__templates_v_published_locale', ['en', 'de', 'ar'])
export const role = pgEnum('role', ['admin', 'root'])
export const social_platform = pgEnum('social_platform', [
  'facebook',
  'instagram',
  'x',
  'linkedin',
  'youtube',
  'tiktok',
  'pinterest',
  'reddit',
  'snapchat',
  'twitch',
  'discord',
  'telegram',
  'whatsapp',
  'skype',
  'viber',
])
export const enum_layout_status = pgEnum('enum_layout_status', ['draft', 'published'])
export const enum__layout_v_version_status = pgEnum('enum__layout_v_version_status', ['draft', 'published'])
export const enum__layout_v_published_locale = pgEnum('enum__layout_v_published_locale', ['en', 'de', 'ar'])

export const pages_blocks_template_block = pgTable(
  'pages_blocks_template_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    template: uuid('template_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_template_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_template_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_template_block_path_idx').on(columns._path),
    pages_blocks_template_block_template_idx: index('pages_blocks_template_block_template_idx').on(columns.template),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_template_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_hero_block = pgTable(
  'pages_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_hero_block_path_idx').on(columns._path),
    pages_blocks_hero_block_image_idx: index('pages_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_scroller_block_rows = pgTable(
  'pages_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    pages_blocks_image_scroller_block_rows_image_idx: index('pages_blocks_image_scroller_block_rows_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_image_scroller_block.id],
      name: 'pages_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_image_scroller_block = pgTable(
  'pages_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_section_block = pgTable(
  'pages_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_list_block_rows = pgTable(
  'pages_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    pages_blocks_list_block_rows_image_idx: index('pages_blocks_list_block_rows_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_list_block.id],
      name: 'pages_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_list_block = pgTable(
  'pages_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_tabs_block_tabs_rows = pgTable(
  'pages_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_tabs_block_tabs.id],
      name: 'pages_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_tabs_block_tabs = pgTable(
  'pages_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    pages_blocks_tabs_block_tabs_image_idx: index('pages_blocks_tabs_block_tabs_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_tabs_block.id],
      name: 'pages_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_tabs_block = pgTable(
  'pages_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_categories_block_categories = pgTable(
  'pages_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    pages_blocks_categories_block_categories_category_idx: index(
      'pages_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_categories_block.id],
      name: 'pages_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_categories_block = pgTable(
  'pages_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_feedback_block_form_field_field_options = pgTable(
  'pages_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_feedback_block_form_field_field_options_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_feedback_block.id],
      name: 'pages_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_feedback_block = pgTable(
  'pages_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages = pgTable(
  'pages',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    name: varchar('name').default('Home Page'),
    slug: varchar('slug'),
    slugLock: boolean('slug_lock').default(true),
    blocksInfo: varchar('blocks_info'),
    seoInfo: varchar('seo_info'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    _status: enum_pages_status('_status').default('draft'),
  },
  (columns) => ({
    pages_slug_idx: uniqueIndex('pages_slug_idx').on(columns.slug),
    pages_updated_at_idx: index('pages_updated_at_idx').on(columns.updatedAt),
    pages_created_at_idx: index('pages_created_at_idx').on(columns.createdAt),
    pages__status_idx: index('pages__status_idx').on(columns._status),
  }),
)

export const pages_locales = pgTable(
  'pages_locales',
  {
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_image: uuid('meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    pages_meta_meta_image_idx: index('pages_meta_meta_image_idx').on(columns.meta_image, columns._locale),
    _localeParent: uniqueIndex('pages_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_template_block = pgTable(
  '_pages_v_blocks_template_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    template: uuid('template_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_template_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_template_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_template_block_path_idx').on(columns._path),
    _pages_v_blocks_template_block_template_idx: index('_pages_v_blocks_template_block_template_idx').on(
      columns.template,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_template_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_hero_block = pgTable(
  '_pages_v_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_hero_block_path_idx').on(columns._path),
    _pages_v_blocks_hero_block_image_idx: index('_pages_v_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_image_scroller_block_rows = pgTable(
  '_pages_v_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    _pages_v_blocks_image_scroller_block_rows_image_idx: index(
      '_pages_v_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_image_scroller_block.id],
      name: '_pages_v_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_image_scroller_block = pgTable(
  '_pages_v_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_section_block = pgTable(
  '_pages_v_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_list_block_rows = pgTable(
  '_pages_v_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    _pages_v_blocks_list_block_rows_image_idx: index('_pages_v_blocks_list_block_rows_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_list_block.id],
      name: '_pages_v_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_list_block = pgTable(
  '_pages_v_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_tabs_block_tabs_rows = pgTable(
  '_pages_v_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_tabs_block_tabs.id],
      name: '_pages_v_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_tabs_block_tabs = pgTable(
  '_pages_v_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    _pages_v_blocks_tabs_block_tabs_image_idx: index('_pages_v_blocks_tabs_block_tabs_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_tabs_block.id],
      name: '_pages_v_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_tabs_block = pgTable(
  '_pages_v_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_categories_block_categories = pgTable(
  '_pages_v_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    _pages_v_blocks_categories_block_categories_category_idx: index(
      '_pages_v_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_categories_block.id],
      name: '_pages_v_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_categories_block = pgTable(
  '_pages_v_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_feedback_block_form_field_field_options = pgTable(
  '_pages_v_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_feedback_block_form_field_field_options_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_feedback_block.id],
      name: '_pages_v_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_feedback_block = pgTable(
  '_pages_v_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v = pgTable(
  '_pages_v',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    parent: uuid('parent_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    version_name: varchar('version_name').default('Home Page'),
    version_slug: varchar('version_slug'),
    version_slugLock: boolean('version_slug_lock').default(true),
    version_blocksInfo: varchar('version_blocks_info'),
    version_seoInfo: varchar('version_seo_info'),
    version_updatedAt: timestamp('version_updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version_createdAt: timestamp('version_created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version__status: enum__pages_v_version_status('version__status').default('draft'),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__pages_v_published_locale('published_locale'),
    latest: boolean('latest'),
    autosave: boolean('autosave'),
  },
  (columns) => ({
    _pages_v_parent_idx: index('_pages_v_parent_idx').on(columns.parent),
    _pages_v_version_version_slug_idx: index('_pages_v_version_version_slug_idx').on(columns.version_slug),
    _pages_v_version_version_updated_at_idx: index('_pages_v_version_version_updated_at_idx').on(
      columns.version_updatedAt,
    ),
    _pages_v_version_version_created_at_idx: index('_pages_v_version_version_created_at_idx').on(
      columns.version_createdAt,
    ),
    _pages_v_version_version__status_idx: index('_pages_v_version_version__status_idx').on(columns.version__status),
    _pages_v_created_at_idx: index('_pages_v_created_at_idx').on(columns.createdAt),
    _pages_v_updated_at_idx: index('_pages_v_updated_at_idx').on(columns.updatedAt),
    _pages_v_snapshot_idx: index('_pages_v_snapshot_idx').on(columns.snapshot),
    _pages_v_published_locale_idx: index('_pages_v_published_locale_idx').on(columns.publishedLocale),
    _pages_v_latest_idx: index('_pages_v_latest_idx').on(columns.latest),
    _pages_v_autosave_idx: index('_pages_v_autosave_idx').on(columns.autosave),
  }),
)

export const _pages_v_locales = pgTable(
  '_pages_v_locales',
  {
    version_meta_title: varchar('version_meta_title'),
    version_meta_description: varchar('version_meta_description'),
    version_meta_image: uuid('version_meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    _pages_v_version_meta_version_meta_image_idx: index('_pages_v_version_meta_version_meta_image_idx').on(
      columns.version_meta_image,
      columns._locale,
    ),
    _localeParent: uniqueIndex('_pages_v_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_template_block = pgTable(
  'categories_blocks_template_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    template: uuid('template_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_template_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_template_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_template_block_path_idx').on(columns._path),
    categories_blocks_template_block_template_idx: index('categories_blocks_template_block_template_idx').on(
      columns.template,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_template_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_hero_block = pgTable(
  'categories_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_hero_block_path_idx').on(columns._path),
    categories_blocks_hero_block_image_idx: index('categories_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_image_scroller_block_rows = pgTable(
  'categories_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    categories_blocks_image_scroller_block_rows_image_idx: index(
      'categories_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories_blocks_image_scroller_block.id],
      name: 'categories_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_image_scroller_block = pgTable(
  'categories_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_section_block = pgTable(
  'categories_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_list_block_rows = pgTable(
  'categories_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    categories_blocks_list_block_rows_image_idx: index('categories_blocks_list_block_rows_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories_blocks_list_block.id],
      name: 'categories_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_list_block = pgTable(
  'categories_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_tabs_block_tabs_rows = pgTable(
  'categories_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories_blocks_tabs_block_tabs.id],
      name: 'categories_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_tabs_block_tabs = pgTable(
  'categories_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    categories_blocks_tabs_block_tabs_image_idx: index('categories_blocks_tabs_block_tabs_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories_blocks_tabs_block.id],
      name: 'categories_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_tabs_block = pgTable(
  'categories_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_categories_block_categories = pgTable(
  'categories_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    categories_blocks_categories_block_categories_category_idx: index(
      'categories_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories_blocks_categories_block.id],
      name: 'categories_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_categories_block = pgTable(
  'categories_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_feedback_block_form_field_field_options = pgTable(
  'categories_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_feedback_block_form_field_field_options_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories_blocks_feedback_block.id],
      name: 'categories_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_feedback_block = pgTable(
  'categories_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories_blocks_products_block = pgTable(
  'categories_blocks_products_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    includeProducts: include_products('include_products').default('byCategorySlug'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('categories_blocks_products_block_order_idx').on(columns._order),
    _parentIDIdx: index('categories_blocks_products_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('categories_blocks_products_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_blocks_products_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const categories = pgTable(
  'categories',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    slug: varchar('slug'),
    slugLock: boolean('slug_lock').default(true),
    name: varchar('name'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    description: varchar('description'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    _status: enum_categories_status('_status').default('draft'),
  },
  (columns) => ({
    categories_slug_idx: uniqueIndex('categories_slug_idx').on(columns.slug),
    categories_image_idx: index('categories_image_idx').on(columns.image),
    categories_updated_at_idx: index('categories_updated_at_idx').on(columns.updatedAt),
    categories_created_at_idx: index('categories_created_at_idx').on(columns.createdAt),
    categories__status_idx: index('categories__status_idx').on(columns._status),
  }),
)

export const categories_locales = pgTable(
  'categories_locales',
  {
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_image: uuid('meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    categories_meta_meta_image_idx: index('categories_meta_meta_image_idx').on(columns.meta_image, columns._locale),
    _localeParent: uniqueIndex('categories_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_template_block = pgTable(
  '_categories_v_blocks_template_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    template: uuid('template_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_template_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_template_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_template_block_path_idx').on(columns._path),
    _categories_v_blocks_template_block_template_idx: index('_categories_v_blocks_template_block_template_idx').on(
      columns.template,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_template_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_hero_block = pgTable(
  '_categories_v_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_hero_block_path_idx').on(columns._path),
    _categories_v_blocks_hero_block_image_idx: index('_categories_v_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_image_scroller_block_rows = pgTable(
  '_categories_v_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    _categories_v_blocks_image_scroller_block_rows_image_idx: index(
      '_categories_v_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v_blocks_image_scroller_block.id],
      name: '_categories_v_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_image_scroller_block = pgTable(
  '_categories_v_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_section_block = pgTable(
  '_categories_v_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_list_block_rows = pgTable(
  '_categories_v_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    _categories_v_blocks_list_block_rows_image_idx: index('_categories_v_blocks_list_block_rows_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v_blocks_list_block.id],
      name: '_categories_v_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_list_block = pgTable(
  '_categories_v_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_tabs_block_tabs_rows = pgTable(
  '_categories_v_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v_blocks_tabs_block_tabs.id],
      name: '_categories_v_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_tabs_block_tabs = pgTable(
  '_categories_v_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    _categories_v_blocks_tabs_block_tabs_image_idx: index('_categories_v_blocks_tabs_block_tabs_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v_blocks_tabs_block.id],
      name: '_categories_v_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_tabs_block = pgTable(
  '_categories_v_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_categories_block_categories = pgTable(
  '_categories_v_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    _categories_v_blocks_categories_block_categories_category_idx: index(
      '_categories_v_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v_blocks_categories_block.id],
      name: '_categories_v_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_categories_block = pgTable(
  '_categories_v_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_feedback_block_form_field_field_options = pgTable(
  '_categories_v_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_feedback_block_form_field_field_options_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v_blocks_feedback_block.id],
      name: '_categories_v_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_feedback_block = pgTable(
  '_categories_v_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v_blocks_products_block = pgTable(
  '_categories_v_blocks_products_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    includeProducts: include_products('include_products').default('byCategorySlug'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_categories_v_blocks_products_block_order_idx').on(columns._order),
    _parentIDIdx: index('_categories_v_blocks_products_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_categories_v_blocks_products_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_blocks_products_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _categories_v = pgTable(
  '_categories_v',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    parent: uuid('parent_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    version_slug: varchar('version_slug'),
    version_slugLock: boolean('version_slug_lock').default(true),
    version_name: varchar('version_name'),
    version_image: uuid('version_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    version_description: varchar('version_description'),
    version_updatedAt: timestamp('version_updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version_createdAt: timestamp('version_created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version__status: enum__categories_v_version_status('version__status').default('draft'),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__categories_v_published_locale('published_locale'),
    latest: boolean('latest'),
    autosave: boolean('autosave'),
  },
  (columns) => ({
    _categories_v_parent_idx: index('_categories_v_parent_idx').on(columns.parent),
    _categories_v_version_version_slug_idx: index('_categories_v_version_version_slug_idx').on(columns.version_slug),
    _categories_v_version_version_image_idx: index('_categories_v_version_version_image_idx').on(columns.version_image),
    _categories_v_version_version_updated_at_idx: index('_categories_v_version_version_updated_at_idx').on(
      columns.version_updatedAt,
    ),
    _categories_v_version_version_created_at_idx: index('_categories_v_version_version_created_at_idx').on(
      columns.version_createdAt,
    ),
    _categories_v_version_version__status_idx: index('_categories_v_version_version__status_idx').on(
      columns.version__status,
    ),
    _categories_v_created_at_idx: index('_categories_v_created_at_idx').on(columns.createdAt),
    _categories_v_updated_at_idx: index('_categories_v_updated_at_idx').on(columns.updatedAt),
    _categories_v_snapshot_idx: index('_categories_v_snapshot_idx').on(columns.snapshot),
    _categories_v_published_locale_idx: index('_categories_v_published_locale_idx').on(columns.publishedLocale),
    _categories_v_latest_idx: index('_categories_v_latest_idx').on(columns.latest),
    _categories_v_autosave_idx: index('_categories_v_autosave_idx').on(columns.autosave),
  }),
)

export const _categories_v_locales = pgTable(
  '_categories_v_locales',
  {
    version_meta_title: varchar('version_meta_title'),
    version_meta_description: varchar('version_meta_description'),
    version_meta_image: uuid('version_meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    _categories_v_version_meta_version_meta_image_idx: index('_categories_v_version_meta_version_meta_image_idx').on(
      columns.version_meta_image,
      columns._locale,
    ),
    _localeParent: uniqueIndex('_categories_v_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_categories_v.id],
      name: '_categories_v_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_details_rows = pgTable(
  'products_details_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    iconSvg: varchar('icon_svg'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('products_details_rows_order_idx').on(columns._order),
    _parentIDIdx: index('products_details_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_details.id],
      name: 'products_details_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_details = pgTable(
  'products_details',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
  },
  (columns) => ({
    _orderIdx: index('products_details_order_idx').on(columns._order),
    _parentIDIdx: index('products_details_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_template_block = pgTable(
  'products_blocks_template_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    template: uuid('template_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_template_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_template_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_template_block_path_idx').on(columns._path),
    products_blocks_template_block_template_idx: index('products_blocks_template_block_template_idx').on(
      columns.template,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_template_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_hero_block = pgTable(
  'products_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_hero_block_path_idx').on(columns._path),
    products_blocks_hero_block_image_idx: index('products_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_image_scroller_block_rows = pgTable(
  'products_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    products_blocks_image_scroller_block_rows_image_idx: index(
      'products_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_blocks_image_scroller_block.id],
      name: 'products_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_image_scroller_block = pgTable(
  'products_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_section_block = pgTable(
  'products_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_list_block_rows = pgTable(
  'products_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    products_blocks_list_block_rows_image_idx: index('products_blocks_list_block_rows_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_blocks_list_block.id],
      name: 'products_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_list_block = pgTable(
  'products_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_tabs_block_tabs_rows = pgTable(
  'products_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_blocks_tabs_block_tabs.id],
      name: 'products_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_tabs_block_tabs = pgTable(
  'products_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    products_blocks_tabs_block_tabs_image_idx: index('products_blocks_tabs_block_tabs_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_blocks_tabs_block.id],
      name: 'products_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_tabs_block = pgTable(
  'products_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_categories_block_categories = pgTable(
  'products_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    products_blocks_categories_block_categories_category_idx: index(
      'products_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_blocks_categories_block.id],
      name: 'products_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_categories_block = pgTable(
  'products_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_feedback_block_form_field_field_options = pgTable(
  'products_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_feedback_block_form_field_field_options_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products_blocks_feedback_block.id],
      name: 'products_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products_blocks_feedback_block = pgTable(
  'products_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('products_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('products_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('products_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const products = pgTable(
  'products',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    _products_products_order: varchar('_products_products_order'),
    slug: varchar('slug'),
    slugLock: boolean('slug_lock').default(true),
    image: varchar('image'),
    shortName: varchar('short_name'),
    fullName: varchar('full_name'),
    estimatedPrice: numeric('estimated_price'),
    categories: uuid('categories_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    description: varchar('description'),
    productLink: varchar('product_link'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    _status: enum_products_status('_status').default('draft'),
  },
  (columns) => ({
    products__products_products_order_idx: index('products__products_products_order_idx').on(
      columns._products_products_order,
    ),
    products_slug_idx: uniqueIndex('products_slug_idx').on(columns.slug),
    products_categories_idx: index('products_categories_idx').on(columns.categories),
    products_updated_at_idx: index('products_updated_at_idx').on(columns.updatedAt),
    products_created_at_idx: index('products_created_at_idx').on(columns.createdAt),
    products__status_idx: index('products__status_idx').on(columns._status),
  }),
)

export const products_locales = pgTable(
  'products_locales',
  {
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_image: uuid('meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    products_meta_meta_image_idx: index('products_meta_meta_image_idx').on(columns.meta_image, columns._locale),
    _localeParent: uniqueIndex('products_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [products.id],
      name: 'products_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_version_details_rows = pgTable(
  '_products_v_version_details_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    iconSvg: varchar('icon_svg'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_version_details_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_version_details_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_version_details.id],
      name: '_products_v_version_details_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_version_details = pgTable(
  '_products_v_version_details',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_version_details_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_version_details_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_version_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_template_block = pgTable(
  '_products_v_blocks_template_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    template: uuid('template_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_template_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_template_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_template_block_path_idx').on(columns._path),
    _products_v_blocks_template_block_template_idx: index('_products_v_blocks_template_block_template_idx').on(
      columns.template,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_template_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_hero_block = pgTable(
  '_products_v_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_hero_block_path_idx').on(columns._path),
    _products_v_blocks_hero_block_image_idx: index('_products_v_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_image_scroller_block_rows = pgTable(
  '_products_v_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    _products_v_blocks_image_scroller_block_rows_image_idx: index(
      '_products_v_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_blocks_image_scroller_block.id],
      name: '_products_v_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_image_scroller_block = pgTable(
  '_products_v_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_section_block = pgTable(
  '_products_v_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_list_block_rows = pgTable(
  '_products_v_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    _products_v_blocks_list_block_rows_image_idx: index('_products_v_blocks_list_block_rows_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_blocks_list_block.id],
      name: '_products_v_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_list_block = pgTable(
  '_products_v_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_tabs_block_tabs_rows = pgTable(
  '_products_v_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_blocks_tabs_block_tabs.id],
      name: '_products_v_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_tabs_block_tabs = pgTable(
  '_products_v_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    _products_v_blocks_tabs_block_tabs_image_idx: index('_products_v_blocks_tabs_block_tabs_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_blocks_tabs_block.id],
      name: '_products_v_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_tabs_block = pgTable(
  '_products_v_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_categories_block_categories = pgTable(
  '_products_v_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    _products_v_blocks_categories_block_categories_category_idx: index(
      '_products_v_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_blocks_categories_block.id],
      name: '_products_v_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_categories_block = pgTable(
  '_products_v_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_feedback_block_form_field_field_options = pgTable(
  '_products_v_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_feedback_block_form_field_field_options_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v_blocks_feedback_block.id],
      name: '_products_v_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v_blocks_feedback_block = pgTable(
  '_products_v_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_products_v_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('_products_v_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_products_v_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _products_v = pgTable(
  '_products_v',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    parent: uuid('parent_id').references(() => products.id, {
      onDelete: 'set null',
    }),
    version__products_products_order: varchar('version__products_products_order'),
    version_slug: varchar('version_slug'),
    version_slugLock: boolean('version_slug_lock').default(true),
    version_image: varchar('version_image'),
    version_shortName: varchar('version_short_name'),
    version_fullName: varchar('version_full_name'),
    version_estimatedPrice: numeric('version_estimated_price'),
    version_categories: uuid('version_categories_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    version_description: varchar('version_description'),
    version_productLink: varchar('version_product_link'),
    version_updatedAt: timestamp('version_updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version_createdAt: timestamp('version_created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version__status: enum__products_v_version_status('version__status').default('draft'),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__products_v_published_locale('published_locale'),
    latest: boolean('latest'),
    autosave: boolean('autosave'),
  },
  (columns) => ({
    _products_v_parent_idx: index('_products_v_parent_idx').on(columns.parent),
    _products_v_version_version__products_products_order_idx: index(
      '_products_v_version_version__products_products_order_idx',
    ).on(columns.version__products_products_order),
    _products_v_version_version_slug_idx: index('_products_v_version_version_slug_idx').on(columns.version_slug),
    _products_v_version_version_categories_idx: index('_products_v_version_version_categories_idx').on(
      columns.version_categories,
    ),
    _products_v_version_version_updated_at_idx: index('_products_v_version_version_updated_at_idx').on(
      columns.version_updatedAt,
    ),
    _products_v_version_version_created_at_idx: index('_products_v_version_version_created_at_idx').on(
      columns.version_createdAt,
    ),
    _products_v_version_version__status_idx: index('_products_v_version_version__status_idx').on(
      columns.version__status,
    ),
    _products_v_created_at_idx: index('_products_v_created_at_idx').on(columns.createdAt),
    _products_v_updated_at_idx: index('_products_v_updated_at_idx').on(columns.updatedAt),
    _products_v_snapshot_idx: index('_products_v_snapshot_idx').on(columns.snapshot),
    _products_v_published_locale_idx: index('_products_v_published_locale_idx').on(columns.publishedLocale),
    _products_v_latest_idx: index('_products_v_latest_idx').on(columns.latest),
    _products_v_autosave_idx: index('_products_v_autosave_idx').on(columns.autosave),
  }),
)

export const _products_v_locales = pgTable(
  '_products_v_locales',
  {
    version_meta_title: varchar('version_meta_title'),
    version_meta_description: varchar('version_meta_description'),
    version_meta_image: uuid('version_meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    _products_v_version_meta_version_meta_image_idx: index('_products_v_version_meta_version_meta_image_idx').on(
      columns.version_meta_image,
      columns._locale,
    ),
    _localeParent: uniqueIndex('_products_v_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_products_v.id],
      name: '_products_v_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_hero_block = pgTable(
  'templates_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_hero_block_path_idx').on(columns._path),
    templates_blocks_hero_block_image_idx: index('templates_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_image_scroller_block_rows = pgTable(
  'templates_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    templates_blocks_image_scroller_block_rows_image_idx: index(
      'templates_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates_blocks_image_scroller_block.id],
      name: 'templates_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_image_scroller_block = pgTable(
  'templates_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_section_block = pgTable(
  'templates_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_list_block_rows = pgTable(
  'templates_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    templates_blocks_list_block_rows_image_idx: index('templates_blocks_list_block_rows_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates_blocks_list_block.id],
      name: 'templates_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_list_block = pgTable(
  'templates_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_tabs_block_tabs_rows = pgTable(
  'templates_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates_blocks_tabs_block_tabs.id],
      name: 'templates_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_tabs_block_tabs = pgTable(
  'templates_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    templates_blocks_tabs_block_tabs_image_idx: index('templates_blocks_tabs_block_tabs_image_idx').on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates_blocks_tabs_block.id],
      name: 'templates_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_tabs_block = pgTable(
  'templates_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_categories_block_categories = pgTable(
  'templates_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    templates_blocks_categories_block_categories_category_idx: index(
      'templates_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates_blocks_categories_block.id],
      name: 'templates_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_categories_block = pgTable(
  'templates_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_feedback_block_form_field_field_options = pgTable(
  'templates_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_feedback_block_form_field_field_options_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates_blocks_feedback_block.id],
      name: 'templates_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates_blocks_feedback_block = pgTable(
  'templates_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('templates_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('templates_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('templates_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [templates.id],
      name: 'templates_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const templates = pgTable(
  'templates',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    slug: varchar('slug'),
    slugLock: boolean('slug_lock').default(true),
    name: varchar('name'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    _status: enum_templates_status('_status').default('draft'),
  },
  (columns) => ({
    templates_slug_idx: uniqueIndex('templates_slug_idx').on(columns.slug),
    templates_updated_at_idx: index('templates_updated_at_idx').on(columns.updatedAt),
    templates_created_at_idx: index('templates_created_at_idx').on(columns.createdAt),
    templates__status_idx: index('templates__status_idx').on(columns._status),
  }),
)

export const _templates_v_blocks_hero_block = pgTable(
  '_templates_v_blocks_hero_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_hero_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_hero_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_hero_block_path_idx').on(columns._path),
    _templates_v_blocks_hero_block_image_idx: index('_templates_v_blocks_hero_block_image_idx').on(columns.image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_hero_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_image_scroller_block_rows = pgTable(
  '_templates_v_blocks_image_scroller_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_image_scroller_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_image_scroller_block_rows_parent_id_idx').on(columns._parentID),
    _templates_v_blocks_image_scroller_block_rows_image_idx: index(
      '_templates_v_blocks_image_scroller_block_rows_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v_blocks_image_scroller_block.id],
      name: '_templates_v_blocks_image_scroller_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_image_scroller_block = pgTable(
  '_templates_v_blocks_image_scroller_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_image_scroller_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_image_scroller_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_image_scroller_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_image_scroller_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_section_block = pgTable(
  '_templates_v_blocks_section_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    contentAlignment: content_align('content_alignment').default('left'),
    textAlignment: text_align('text_alignment').default('left'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_section_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_section_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_section_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_section_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_list_block_rows = pgTable(
  '_templates_v_blocks_list_block_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    title: varchar('title'),
    description: varchar('description'),
    url: varchar('url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_list_block_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_list_block_rows_parent_id_idx').on(columns._parentID),
    _templates_v_blocks_list_block_rows_image_idx: index('_templates_v_blocks_list_block_rows_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v_blocks_list_block.id],
      name: '_templates_v_blocks_list_block_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_list_block = pgTable(
  '_templates_v_blocks_list_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    action_actionType: action_type('action_action_type').default('button'),
    action_text: varchar('action_text'),
    action_url: varchar('action_url'),
    action_iconSvg: varchar('action_icon_svg'),
    action_iconPosition: icon_position('action_icon_position').default('left'),
    action_linkColor: link_color('action_link_color').default('foreground'),
    action_linkVariant: link_variant('action_link_variant').default('underline'),
    action_buttonColor: btn_color('action_button_color').default('primary'),
    action_buttonVariant: btn_variant('action_button_variant').default('solid'),
    action_asLink: boolean('action_as_link').default(false),
    action_openInNewTab: boolean('action_open_in_new_tab').default(false),
    showAction: boolean('show_action').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_list_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_list_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_list_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_list_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_tabs_block_tabs_rows = pgTable(
  '_templates_v_blocks_tabs_block_tabs_rows',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    icon: varchar('icon'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_tabs_block_tabs_rows_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_tabs_block_tabs_rows_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v_blocks_tabs_block_tabs.id],
      name: '_templates_v_blocks_tabs_block_tabs_rows_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_tabs_block_tabs = pgTable(
  '_templates_v_blocks_tabs_block_tabs',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    label: varchar('label'),
    icon: varchar('icon'),
    title: varchar('title'),
    image: uuid('image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_tabs_block_tabs_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_tabs_block_tabs_parent_id_idx').on(columns._parentID),
    _templates_v_blocks_tabs_block_tabs_image_idx: index('_templates_v_blocks_tabs_block_tabs_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v_blocks_tabs_block.id],
      name: '_templates_v_blocks_tabs_block_tabs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_tabs_block = pgTable(
  '_templates_v_blocks_tabs_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_tabs_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_tabs_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_tabs_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_tabs_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_categories_block_categories = pgTable(
  '_templates_v_blocks_categories_block_categories',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    category: uuid('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_categories_block_categories_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_categories_block_categories_parent_id_idx').on(columns._parentID),
    _templates_v_blocks_categories_block_categories_category_idx: index(
      '_templates_v_blocks_categories_block_categories_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v_blocks_categories_block.id],
      name: '_templates_v_blocks_categories_block_categories_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_categories_block = pgTable(
  '_templates_v_blocks_categories_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    cardBlockType: card_block_type('card_block_type').default('cards'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_categories_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_categories_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_categories_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_categories_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_feedback_block_form_field_field_options = pgTable(
  '_templates_v_blocks_feedback_block_form_field_field_options',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    fieldOptionLabel: varchar('field_option_label'),
    fieldOptionValue: varchar('field_option_value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_feedback_block_form_field_field_options_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_feedback_block_form_field_field_options_parent_id_idx').on(
      columns._parentID,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v_blocks_feedback_block.id],
      name: '_templates_v_blocks_feedback_block_form_field_field_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v_blocks_feedback_block = pgTable(
  '_templates_v_blocks_feedback_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    subtitle: jsonb('subtitle'),
    formField_fieldType: field_type('form_field_field_type').default('emailInput'),
    formField_fieldLabel: varchar('form_field_field_label'),
    formField_fieldPlaceholder: varchar('form_field_field_placeholder'),
    formField_fieldIsRequired: boolean('form_field_field_is_required').default(false),
    formField_fieldInfoMessage: varchar('form_field_field_info_message'),
    formField_fieldErrorMessage: varchar('form_field_field_error_message'),
    formAction_actionType: action_type('form_action_action_type').default('button'),
    formAction_text: varchar('form_action_text'),
    formAction_url: varchar('form_action_url'),
    formAction_iconSvg: varchar('form_action_icon_svg'),
    formAction_iconPosition: icon_position('form_action_icon_position').default('left'),
    formAction_linkColor: link_color('form_action_link_color').default('foreground'),
    formAction_linkVariant: link_variant('form_action_link_variant').default('underline'),
    formAction_buttonColor: btn_color('form_action_button_color').default('primary'),
    formAction_buttonVariant: btn_variant('form_action_button_variant').default('solid'),
    formAction_asLink: boolean('form_action_as_link').default(false),
    formAction_openInNewTab: boolean('form_action_open_in_new_tab').default(false),
    showSubmitButton: boolean('show_submit_button').default(true),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_templates_v_blocks_feedback_block_order_idx').on(columns._order),
    _parentIDIdx: index('_templates_v_blocks_feedback_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_templates_v_blocks_feedback_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_templates_v.id],
      name: '_templates_v_blocks_feedback_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _templates_v = pgTable(
  '_templates_v',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    parent: uuid('parent_id').references(() => templates.id, {
      onDelete: 'set null',
    }),
    version_slug: varchar('version_slug'),
    version_slugLock: boolean('version_slug_lock').default(true),
    version_name: varchar('version_name'),
    version_updatedAt: timestamp('version_updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version_createdAt: timestamp('version_created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version__status: enum__templates_v_version_status('version__status').default('draft'),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__templates_v_published_locale('published_locale'),
    latest: boolean('latest'),
    autosave: boolean('autosave'),
  },
  (columns) => ({
    _templates_v_parent_idx: index('_templates_v_parent_idx').on(columns.parent),
    _templates_v_version_version_slug_idx: index('_templates_v_version_version_slug_idx').on(columns.version_slug),
    _templates_v_version_version_updated_at_idx: index('_templates_v_version_version_updated_at_idx').on(
      columns.version_updatedAt,
    ),
    _templates_v_version_version_created_at_idx: index('_templates_v_version_version_created_at_idx').on(
      columns.version_createdAt,
    ),
    _templates_v_version_version__status_idx: index('_templates_v_version_version__status_idx').on(
      columns.version__status,
    ),
    _templates_v_created_at_idx: index('_templates_v_created_at_idx').on(columns.createdAt),
    _templates_v_updated_at_idx: index('_templates_v_updated_at_idx').on(columns.updatedAt),
    _templates_v_snapshot_idx: index('_templates_v_snapshot_idx').on(columns.snapshot),
    _templates_v_published_locale_idx: index('_templates_v_published_locale_idx').on(columns.publishedLocale),
    _templates_v_latest_idx: index('_templates_v_latest_idx').on(columns.latest),
    _templates_v_autosave_idx: index('_templates_v_autosave_idx').on(columns.autosave),
  }),
)

export const images = pgTable(
  'images',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    alt: varchar('alt').notNull().default('image'),
    prefix: varchar('prefix').default('images'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    url: varchar('url'),
    thumbnailURL: varchar('thumbnail_u_r_l'),
    filename: varchar('filename'),
    mimeType: varchar('mime_type'),
    filesize: numeric('filesize'),
    width: numeric('width'),
    height: numeric('height'),
    focalX: numeric('focal_x'),
    focalY: numeric('focal_y'),
  },
  (columns) => ({
    images_updated_at_idx: index('images_updated_at_idx').on(columns.updatedAt),
    images_created_at_idx: index('images_created_at_idx').on(columns.createdAt),
    images_filename_idx: uniqueIndex('images_filename_idx').on(columns.filename),
  }),
)

export const users_sessions = pgTable(
  'users_sessions',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    expiresAt: timestamp('expires_at', { mode: 'string', withTimezone: true, precision: 3 }).notNull(),
  },
  (columns) => ({
    _orderIdx: index('users_sessions_order_idx').on(columns._order),
    _parentIDIdx: index('users_sessions_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [users.id],
      name: 'users_sessions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const users = pgTable(
  'users',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    name: varchar('name'),
    role: role('role').default('admin'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    email: varchar('email').notNull(),
    resetPasswordToken: varchar('reset_password_token'),
    resetPasswordExpiration: timestamp('reset_password_expiration', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    salt: varchar('salt'),
    hash: varchar('hash'),
    loginAttempts: numeric('login_attempts').default('0'),
    lockUntil: timestamp('lock_until', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    users_updated_at_idx: index('users_updated_at_idx').on(columns.updatedAt),
    users_created_at_idx: index('users_created_at_idx').on(columns.createdAt),
    users_email_idx: uniqueIndex('users_email_idx').on(columns.email),
  }),
)

export const payload_locked_documents = pgTable(
  'payload_locked_documents',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    globalSlug: varchar('global_slug'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
  },
  (columns) => ({
    payload_locked_documents_global_slug_idx: index('payload_locked_documents_global_slug_idx').on(columns.globalSlug),
    payload_locked_documents_updated_at_idx: index('payload_locked_documents_updated_at_idx').on(columns.updatedAt),
    payload_locked_documents_created_at_idx: index('payload_locked_documents_created_at_idx').on(columns.createdAt),
  }),
)

export const payload_locked_documents_rels = pgTable(
  'payload_locked_documents_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: uuid('parent_id').notNull(),
    path: varchar('path').notNull(),
    pagesID: uuid('pages_id'),
    categoriesID: uuid('categories_id'),
    productsID: uuid('products_id'),
    templatesID: uuid('templates_id'),
    imagesID: uuid('images_id'),
    usersID: uuid('users_id'),
  },
  (columns) => ({
    order: index('payload_locked_documents_rels_order_idx').on(columns.order),
    parentIdx: index('payload_locked_documents_rels_parent_idx').on(columns.parent),
    pathIdx: index('payload_locked_documents_rels_path_idx').on(columns.path),
    payload_locked_documents_rels_pages_id_idx: index('payload_locked_documents_rels_pages_id_idx').on(columns.pagesID),
    payload_locked_documents_rels_categories_id_idx: index('payload_locked_documents_rels_categories_id_idx').on(
      columns.categoriesID,
    ),
    payload_locked_documents_rels_products_id_idx: index('payload_locked_documents_rels_products_id_idx').on(
      columns.productsID,
    ),
    payload_locked_documents_rels_templates_id_idx: index('payload_locked_documents_rels_templates_id_idx').on(
      columns.templatesID,
    ),
    payload_locked_documents_rels_images_id_idx: index('payload_locked_documents_rels_images_id_idx').on(
      columns.imagesID,
    ),
    payload_locked_documents_rels_users_id_idx: index('payload_locked_documents_rels_users_id_idx').on(columns.usersID),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [payload_locked_documents.id],
      name: 'payload_locked_documents_rels_parent_fk',
    }).onDelete('cascade'),
    pagesIdFk: foreignKey({
      columns: [columns['pagesID']],
      foreignColumns: [pages.id],
      name: 'payload_locked_documents_rels_pages_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: 'payload_locked_documents_rels_categories_fk',
    }).onDelete('cascade'),
    productsIdFk: foreignKey({
      columns: [columns['productsID']],
      foreignColumns: [products.id],
      name: 'payload_locked_documents_rels_products_fk',
    }).onDelete('cascade'),
    templatesIdFk: foreignKey({
      columns: [columns['templatesID']],
      foreignColumns: [templates.id],
      name: 'payload_locked_documents_rels_templates_fk',
    }).onDelete('cascade'),
    imagesIdFk: foreignKey({
      columns: [columns['imagesID']],
      foreignColumns: [images.id],
      name: 'payload_locked_documents_rels_images_fk',
    }).onDelete('cascade'),
    usersIdFk: foreignKey({
      columns: [columns['usersID']],
      foreignColumns: [users.id],
      name: 'payload_locked_documents_rels_users_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_preferences = pgTable(
  'payload_preferences',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    key: varchar('key'),
    value: jsonb('value'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
  },
  (columns) => ({
    payload_preferences_key_idx: index('payload_preferences_key_idx').on(columns.key),
    payload_preferences_updated_at_idx: index('payload_preferences_updated_at_idx').on(columns.updatedAt),
    payload_preferences_created_at_idx: index('payload_preferences_created_at_idx').on(columns.createdAt),
  }),
)

export const payload_preferences_rels = pgTable(
  'payload_preferences_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: uuid('parent_id').notNull(),
    path: varchar('path').notNull(),
    usersID: uuid('users_id'),
  },
  (columns) => ({
    order: index('payload_preferences_rels_order_idx').on(columns.order),
    parentIdx: index('payload_preferences_rels_parent_idx').on(columns.parent),
    pathIdx: index('payload_preferences_rels_path_idx').on(columns.path),
    payload_preferences_rels_users_id_idx: index('payload_preferences_rels_users_id_idx').on(columns.usersID),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [payload_preferences.id],
      name: 'payload_preferences_rels_parent_fk',
    }).onDelete('cascade'),
    usersIdFk: foreignKey({
      columns: [columns['usersID']],
      foreignColumns: [users.id],
      name: 'payload_preferences_rels_users_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_migrations = pgTable(
  'payload_migrations',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    name: varchar('name'),
    batch: numeric('batch'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
  },
  (columns) => ({
    payload_migrations_updated_at_idx: index('payload_migrations_updated_at_idx').on(columns.updatedAt),
    payload_migrations_created_at_idx: index('payload_migrations_created_at_idx').on(columns.createdAt),
  }),
)

export const layout_blocks_header_block_actions = pgTable(
  'layout_blocks_header_block_actions',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    actionType: action_type('action_type').default('button'),
    text: varchar('text'),
    url: varchar('url'),
    iconSvg: varchar('icon_svg'),
    iconPosition: icon_position('icon_position').default('left'),
    linkColor: link_color('link_color').default('foreground'),
    linkVariant: link_variant('link_variant').default('underline'),
    buttonColor: btn_color('button_color').default('primary'),
    buttonVariant: btn_variant('button_variant').default('solid'),
    asLink: boolean('as_link').default(false),
    openInNewTab: boolean('open_in_new_tab').default(false),
  },
  (columns) => ({
    _orderIdx: index('layout_blocks_header_block_actions_order_idx').on(columns._order),
    _parentIDIdx: index('layout_blocks_header_block_actions_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout_blocks_header_block.id],
      name: 'layout_blocks_header_block_actions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const layout_blocks_header_block = pgTable(
  'layout_blocks_header_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('layout_blocks_header_block_order_idx').on(columns._order),
    _parentIDIdx: index('layout_blocks_header_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('layout_blocks_header_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout.id],
      name: 'layout_blocks_header_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const layout_blocks_footer_block_columns_links = pgTable(
  'layout_blocks_footer_block_columns_links',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    actionType: action_type('action_type').default('link'),
    text: varchar('text'),
    url: varchar('url'),
    iconSvg: varchar('icon_svg'),
    iconPosition: icon_position('icon_position').default('left'),
    linkColor: link_color('link_color').default('foreground'),
    linkVariant: link_variant('link_variant').default('underline'),
    buttonColor: btn_color('button_color').default('primary'),
    buttonVariant: btn_variant('button_variant').default('solid'),
    asLink: boolean('as_link').default(false),
    openInNewTab: boolean('open_in_new_tab').default(false),
  },
  (columns) => ({
    _orderIdx: index('layout_blocks_footer_block_columns_links_order_idx').on(columns._order),
    _parentIDIdx: index('layout_blocks_footer_block_columns_links_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout_blocks_footer_block_columns.id],
      name: 'layout_blocks_footer_block_columns_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const layout_blocks_footer_block_columns = pgTable(
  'layout_blocks_footer_block_columns',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
  },
  (columns) => ({
    _orderIdx: index('layout_blocks_footer_block_columns_order_idx').on(columns._order),
    _parentIDIdx: index('layout_blocks_footer_block_columns_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout_blocks_footer_block.id],
      name: 'layout_blocks_footer_block_columns_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const layout_blocks_footer_block = pgTable(
  'layout_blocks_footer_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: varchar('id').primaryKey(),
    copyright_text: varchar('copyright_text').default('© 2025 All rights reserved.'),
    copyright_textAlignment: text_align('copyright_text_alignment').default('left'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('layout_blocks_footer_block_order_idx').on(columns._order),
    _parentIDIdx: index('layout_blocks_footer_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('layout_blocks_footer_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout.id],
      name: 'layout_blocks_footer_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const layout_branding_social_media_links = pgTable(
  'layout_branding_social_media_links',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    socialPlatform: social_platform('social_platform').default('facebook'),
    socialUrl: varchar('social_url'),
    socialIconSvg: varchar('social_icon_svg'),
  },
  (columns) => ({
    _orderIdx: index('layout_branding_social_media_links_order_idx').on(columns._order),
    _parentIDIdx: index('layout_branding_social_media_links_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout.id],
      name: 'layout_branding_social_media_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const layout = pgTable(
  'layout',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    branding_logoImage: uuid('branding_logo_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    branding_logoIconSvg: varchar('branding_logo_icon_svg'),
    branding_logoAsIconSvg: boolean('branding_logo_as_icon_svg').default(false),
    branding_favicon: uuid('branding_favicon_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    _status: enum_layout_status('_status').default('draft'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    layout_branding_branding_logo_image_idx: index('layout_branding_branding_logo_image_idx').on(
      columns.branding_logoImage,
    ),
    layout_branding_branding_favicon_idx: index('layout_branding_branding_favicon_idx').on(columns.branding_favicon),
    layout__status_idx: index('layout__status_idx').on(columns._status),
  }),
)

export const layout_locales = pgTable(
  'layout_locales',
  {
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_image: uuid('meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    layout_meta_meta_image_idx: index('layout_meta_meta_image_idx').on(columns.meta_image, columns._locale),
    _localeParent: uniqueIndex('layout_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [layout.id],
      name: 'layout_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v_blocks_header_block_actions = pgTable(
  '_layout_v_blocks_header_block_actions',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    actionType: action_type('action_type').default('button'),
    text: varchar('text'),
    url: varchar('url'),
    iconSvg: varchar('icon_svg'),
    iconPosition: icon_position('icon_position').default('left'),
    linkColor: link_color('link_color').default('foreground'),
    linkVariant: link_variant('link_variant').default('underline'),
    buttonColor: btn_color('button_color').default('primary'),
    buttonVariant: btn_variant('button_variant').default('solid'),
    asLink: boolean('as_link').default(false),
    openInNewTab: boolean('open_in_new_tab').default(false),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_layout_v_blocks_header_block_actions_order_idx').on(columns._order),
    _parentIDIdx: index('_layout_v_blocks_header_block_actions_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v_blocks_header_block.id],
      name: '_layout_v_blocks_header_block_actions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v_blocks_header_block = pgTable(
  '_layout_v_blocks_header_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_layout_v_blocks_header_block_order_idx').on(columns._order),
    _parentIDIdx: index('_layout_v_blocks_header_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_layout_v_blocks_header_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v.id],
      name: '_layout_v_blocks_header_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v_blocks_footer_block_columns_links = pgTable(
  '_layout_v_blocks_footer_block_columns_links',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    actionType: action_type('action_type').default('link'),
    text: varchar('text'),
    url: varchar('url'),
    iconSvg: varchar('icon_svg'),
    iconPosition: icon_position('icon_position').default('left'),
    linkColor: link_color('link_color').default('foreground'),
    linkVariant: link_variant('link_variant').default('underline'),
    buttonColor: btn_color('button_color').default('primary'),
    buttonVariant: btn_variant('button_variant').default('solid'),
    asLink: boolean('as_link').default(false),
    openInNewTab: boolean('open_in_new_tab').default(false),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_layout_v_blocks_footer_block_columns_links_order_idx').on(columns._order),
    _parentIDIdx: index('_layout_v_blocks_footer_block_columns_links_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v_blocks_footer_block_columns.id],
      name: '_layout_v_blocks_footer_block_columns_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v_blocks_footer_block_columns = pgTable(
  '_layout_v_blocks_footer_block_columns',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    title: varchar('title'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_layout_v_blocks_footer_block_columns_order_idx').on(columns._order),
    _parentIDIdx: index('_layout_v_blocks_footer_block_columns_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v_blocks_footer_block.id],
      name: '_layout_v_blocks_footer_block_columns_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v_blocks_footer_block = pgTable(
  '_layout_v_blocks_footer_block',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    _path: text('_path').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    copyright_text: varchar('copyright_text').default('© 2025 All rights reserved.'),
    copyright_textAlignment: text_align('copyright_text_alignment').default('left'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_layout_v_blocks_footer_block_order_idx').on(columns._order),
    _parentIDIdx: index('_layout_v_blocks_footer_block_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_layout_v_blocks_footer_block_path_idx').on(columns._path),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v.id],
      name: '_layout_v_blocks_footer_block_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v_version_branding_social_media_links = pgTable(
  '_layout_v_version_branding_social_media_links',
  {
    _order: integer('_order').notNull(),
    _parentID: uuid('_parent_id').notNull(),
    id: uuid('id').defaultRandom().primaryKey(),
    socialPlatform: social_platform('social_platform').default('facebook'),
    socialUrl: varchar('social_url'),
    socialIconSvg: varchar('social_icon_svg'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_layout_v_version_branding_social_media_links_order_idx').on(columns._order),
    _parentIDIdx: index('_layout_v_version_branding_social_media_links_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v.id],
      name: '_layout_v_version_branding_social_media_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _layout_v = pgTable(
  '_layout_v',
  {
    id: uuid('id').defaultRandom().primaryKey(),
    version_branding_logoImage: uuid('version_branding_logo_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    version_branding_logoIconSvg: varchar('version_branding_logo_icon_svg'),
    version_branding_logoAsIconSvg: boolean('version_branding_logo_as_icon_svg').default(false),
    version_branding_favicon: uuid('version_branding_favicon_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    version__status: enum__layout_v_version_status('version__status').default('draft'),
    version_updatedAt: timestamp('version_updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    version_createdAt: timestamp('version_created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }).defaultNow().notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__layout_v_published_locale('published_locale'),
    latest: boolean('latest'),
    autosave: boolean('autosave'),
  },
  (columns) => ({
    _layout_v_version_branding_version_branding_logo_image_idx: index(
      '_layout_v_version_branding_version_branding_logo_image_idx',
    ).on(columns.version_branding_logoImage),
    _layout_v_version_branding_version_branding_favicon_idx: index(
      '_layout_v_version_branding_version_branding_favicon_idx',
    ).on(columns.version_branding_favicon),
    _layout_v_version_version__status_idx: index('_layout_v_version_version__status_idx').on(columns.version__status),
    _layout_v_created_at_idx: index('_layout_v_created_at_idx').on(columns.createdAt),
    _layout_v_updated_at_idx: index('_layout_v_updated_at_idx').on(columns.updatedAt),
    _layout_v_snapshot_idx: index('_layout_v_snapshot_idx').on(columns.snapshot),
    _layout_v_published_locale_idx: index('_layout_v_published_locale_idx').on(columns.publishedLocale),
    _layout_v_latest_idx: index('_layout_v_latest_idx').on(columns.latest),
    _layout_v_autosave_idx: index('_layout_v_autosave_idx').on(columns.autosave),
  }),
)

export const _layout_v_locales = pgTable(
  '_layout_v_locales',
  {
    version_meta_title: varchar('version_meta_title'),
    version_meta_description: varchar('version_meta_description'),
    version_meta_image: uuid('version_meta_image_id').references(() => images.id, {
      onDelete: 'set null',
    }),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: uuid('_parent_id').notNull(),
  },
  (columns) => ({
    _layout_v_version_meta_version_meta_image_idx: index('_layout_v_version_meta_version_meta_image_idx').on(
      columns.version_meta_image,
      columns._locale,
    ),
    _localeParent: uniqueIndex('_layout_v_locales_locale_parent_id_unique').on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_layout_v.id],
      name: '_layout_v_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const relations_pages_blocks_template_block = relations(pages_blocks_template_block, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_template_block._parentID],
    references: [pages.id],
    relationName: '_blocks_templateBlock',
  }),
  template: one(templates, {
    fields: [pages_blocks_template_block.template],
    references: [templates.id],
    relationName: 'template',
  }),
}))
export const relations_pages_blocks_hero_block = relations(pages_blocks_hero_block, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_hero_block._parentID],
    references: [pages.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [pages_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_pages_blocks_image_scroller_block_rows = relations(
  pages_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(pages_blocks_image_scroller_block, {
      fields: [pages_blocks_image_scroller_block_rows._parentID],
      references: [pages_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [pages_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_image_scroller_block = relations(
  pages_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_image_scroller_block._parentID],
      references: [pages.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(pages_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_pages_blocks_section_block = relations(pages_blocks_section_block, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_section_block._parentID],
    references: [pages.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations_pages_blocks_list_block_rows = relations(pages_blocks_list_block_rows, ({ one }) => ({
  _parentID: one(pages_blocks_list_block, {
    fields: [pages_blocks_list_block_rows._parentID],
    references: [pages_blocks_list_block.id],
    relationName: 'rows',
  }),
  image: one(images, {
    fields: [pages_blocks_list_block_rows.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_pages_blocks_list_block = relations(pages_blocks_list_block, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_list_block._parentID],
    references: [pages.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(pages_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations_pages_blocks_tabs_block_tabs_rows = relations(pages_blocks_tabs_block_tabs_rows, ({ one }) => ({
  _parentID: one(pages_blocks_tabs_block_tabs, {
    fields: [pages_blocks_tabs_block_tabs_rows._parentID],
    references: [pages_blocks_tabs_block_tabs.id],
    relationName: 'rows',
  }),
}))
export const relations_pages_blocks_tabs_block_tabs = relations(pages_blocks_tabs_block_tabs, ({ one, many }) => ({
  _parentID: one(pages_blocks_tabs_block, {
    fields: [pages_blocks_tabs_block_tabs._parentID],
    references: [pages_blocks_tabs_block.id],
    relationName: 'tabs',
  }),
  image: one(images, {
    fields: [pages_blocks_tabs_block_tabs.image],
    references: [images.id],
    relationName: 'image',
  }),
  rows: many(pages_blocks_tabs_block_tabs_rows, {
    relationName: 'rows',
  }),
}))
export const relations_pages_blocks_tabs_block = relations(pages_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_tabs_block._parentID],
    references: [pages.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(pages_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations_pages_blocks_categories_block_categories = relations(
  pages_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(pages_blocks_categories_block, {
      fields: [pages_blocks_categories_block_categories._parentID],
      references: [pages_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [pages_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations_pages_blocks_categories_block = relations(pages_blocks_categories_block, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_categories_block._parentID],
    references: [pages.id],
    relationName: '_blocks_categoriesBlock',
  }),
  categories: many(pages_blocks_categories_block_categories, {
    relationName: 'categories',
  }),
}))
export const relations_pages_blocks_feedback_block_form_field_field_options = relations(
  pages_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(pages_blocks_feedback_block, {
      fields: [pages_blocks_feedback_block_form_field_field_options._parentID],
      references: [pages_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations_pages_blocks_feedback_block = relations(pages_blocks_feedback_block, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_feedback_block._parentID],
    references: [pages.id],
    relationName: '_blocks_feedbackBlock',
  }),
  formField_fieldOptions: many(pages_blocks_feedback_block_form_field_field_options, {
    relationName: 'formField_fieldOptions',
  }),
}))
export const relations_pages_locales = relations(pages_locales, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_locales._parentID],
    references: [pages.id],
    relationName: '_locales',
  }),
  meta_image: one(images, {
    fields: [pages_locales.meta_image],
    references: [images.id],
    relationName: 'meta_image',
  }),
}))
export const relations_pages = relations(pages, ({ many }) => ({
  _blocks_templateBlock: many(pages_blocks_template_block, {
    relationName: '_blocks_templateBlock',
  }),
  _blocks_heroBlock: many(pages_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(pages_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(pages_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(pages_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(pages_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(pages_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(pages_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
  _locales: many(pages_locales, {
    relationName: '_locales',
  }),
}))
export const relations__pages_v_blocks_template_block = relations(_pages_v_blocks_template_block, ({ one }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_template_block._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_templateBlock',
  }),
  template: one(templates, {
    fields: [_pages_v_blocks_template_block.template],
    references: [templates.id],
    relationName: 'template',
  }),
}))
export const relations__pages_v_blocks_hero_block = relations(_pages_v_blocks_hero_block, ({ one }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_hero_block._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [_pages_v_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations__pages_v_blocks_image_scroller_block_rows = relations(
  _pages_v_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_image_scroller_block, {
      fields: [_pages_v_blocks_image_scroller_block_rows._parentID],
      references: [_pages_v_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_pages_v_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__pages_v_blocks_image_scroller_block = relations(
  _pages_v_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_image_scroller_block._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(_pages_v_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__pages_v_blocks_section_block = relations(_pages_v_blocks_section_block, ({ one }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_section_block._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations__pages_v_blocks_list_block_rows = relations(_pages_v_blocks_list_block_rows, ({ one }) => ({
  _parentID: one(_pages_v_blocks_list_block, {
    fields: [_pages_v_blocks_list_block_rows._parentID],
    references: [_pages_v_blocks_list_block.id],
    relationName: 'rows',
  }),
  image: one(images, {
    fields: [_pages_v_blocks_list_block_rows.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations__pages_v_blocks_list_block = relations(_pages_v_blocks_list_block, ({ one, many }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_list_block._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(_pages_v_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations__pages_v_blocks_tabs_block_tabs_rows = relations(
  _pages_v_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_tabs_block_tabs, {
      fields: [_pages_v_blocks_tabs_block_tabs_rows._parentID],
      references: [_pages_v_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations__pages_v_blocks_tabs_block_tabs = relations(
  _pages_v_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_tabs_block, {
      fields: [_pages_v_blocks_tabs_block_tabs._parentID],
      references: [_pages_v_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [_pages_v_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(_pages_v_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__pages_v_blocks_tabs_block = relations(_pages_v_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_tabs_block._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(_pages_v_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations__pages_v_blocks_categories_block_categories = relations(
  _pages_v_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_categories_block, {
      fields: [_pages_v_blocks_categories_block_categories._parentID],
      references: [_pages_v_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [_pages_v_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations__pages_v_blocks_categories_block = relations(
  _pages_v_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_categories_block._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(_pages_v_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations__pages_v_blocks_feedback_block_form_field_field_options = relations(
  _pages_v_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_feedback_block, {
      fields: [_pages_v_blocks_feedback_block_form_field_field_options._parentID],
      references: [_pages_v_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__pages_v_blocks_feedback_block = relations(_pages_v_blocks_feedback_block, ({ one, many }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_feedback_block._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_feedbackBlock',
  }),
  formField_fieldOptions: many(_pages_v_blocks_feedback_block_form_field_field_options, {
    relationName: 'formField_fieldOptions',
  }),
}))
export const relations__pages_v_locales = relations(_pages_v_locales, ({ one }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_locales._parentID],
    references: [_pages_v.id],
    relationName: '_locales',
  }),
  version_meta_image: one(images, {
    fields: [_pages_v_locales.version_meta_image],
    references: [images.id],
    relationName: 'version_meta_image',
  }),
}))
export const relations__pages_v = relations(_pages_v, ({ one, many }) => ({
  parent: one(pages, {
    fields: [_pages_v.parent],
    references: [pages.id],
    relationName: 'parent',
  }),
  _blocks_templateBlock: many(_pages_v_blocks_template_block, {
    relationName: '_blocks_templateBlock',
  }),
  _blocks_heroBlock: many(_pages_v_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(_pages_v_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(_pages_v_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(_pages_v_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(_pages_v_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(_pages_v_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(_pages_v_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
  _locales: many(_pages_v_locales, {
    relationName: '_locales',
  }),
}))
export const relations_categories_blocks_template_block = relations(categories_blocks_template_block, ({ one }) => ({
  _parentID: one(categories, {
    fields: [categories_blocks_template_block._parentID],
    references: [categories.id],
    relationName: '_blocks_templateBlock',
  }),
  template: one(templates, {
    fields: [categories_blocks_template_block.template],
    references: [templates.id],
    relationName: 'template',
  }),
}))
export const relations_categories_blocks_hero_block = relations(categories_blocks_hero_block, ({ one }) => ({
  _parentID: one(categories, {
    fields: [categories_blocks_hero_block._parentID],
    references: [categories.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [categories_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_categories_blocks_image_scroller_block_rows = relations(
  categories_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(categories_blocks_image_scroller_block, {
      fields: [categories_blocks_image_scroller_block_rows._parentID],
      references: [categories_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [categories_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations_categories_blocks_image_scroller_block = relations(
  categories_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(categories, {
      fields: [categories_blocks_image_scroller_block._parentID],
      references: [categories.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(categories_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_categories_blocks_section_block = relations(categories_blocks_section_block, ({ one }) => ({
  _parentID: one(categories, {
    fields: [categories_blocks_section_block._parentID],
    references: [categories.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations_categories_blocks_list_block_rows = relations(categories_blocks_list_block_rows, ({ one }) => ({
  _parentID: one(categories_blocks_list_block, {
    fields: [categories_blocks_list_block_rows._parentID],
    references: [categories_blocks_list_block.id],
    relationName: 'rows',
  }),
  image: one(images, {
    fields: [categories_blocks_list_block_rows.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_categories_blocks_list_block = relations(categories_blocks_list_block, ({ one, many }) => ({
  _parentID: one(categories, {
    fields: [categories_blocks_list_block._parentID],
    references: [categories.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(categories_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations_categories_blocks_tabs_block_tabs_rows = relations(
  categories_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(categories_blocks_tabs_block_tabs, {
      fields: [categories_blocks_tabs_block_tabs_rows._parentID],
      references: [categories_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations_categories_blocks_tabs_block_tabs = relations(
  categories_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(categories_blocks_tabs_block, {
      fields: [categories_blocks_tabs_block_tabs._parentID],
      references: [categories_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [categories_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(categories_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_categories_blocks_tabs_block = relations(categories_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(categories, {
    fields: [categories_blocks_tabs_block._parentID],
    references: [categories.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(categories_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations_categories_blocks_categories_block_categories = relations(
  categories_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(categories_blocks_categories_block, {
      fields: [categories_blocks_categories_block_categories._parentID],
      references: [categories_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [categories_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations_categories_blocks_categories_block = relations(
  categories_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(categories, {
      fields: [categories_blocks_categories_block._parentID],
      references: [categories.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(categories_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations_categories_blocks_feedback_block_form_field_field_options = relations(
  categories_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(categories_blocks_feedback_block, {
      fields: [categories_blocks_feedback_block_form_field_field_options._parentID],
      references: [categories_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations_categories_blocks_feedback_block = relations(
  categories_blocks_feedback_block,
  ({ one, many }) => ({
    _parentID: one(categories, {
      fields: [categories_blocks_feedback_block._parentID],
      references: [categories.id],
      relationName: '_blocks_feedbackBlock',
    }),
    formField_fieldOptions: many(categories_blocks_feedback_block_form_field_field_options, {
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations_categories_blocks_products_block = relations(categories_blocks_products_block, ({ one }) => ({
  _parentID: one(categories, {
    fields: [categories_blocks_products_block._parentID],
    references: [categories.id],
    relationName: '_blocks_productsBlock',
  }),
}))
export const relations_categories_locales = relations(categories_locales, ({ one }) => ({
  _parentID: one(categories, {
    fields: [categories_locales._parentID],
    references: [categories.id],
    relationName: '_locales',
  }),
  meta_image: one(images, {
    fields: [categories_locales.meta_image],
    references: [images.id],
    relationName: 'meta_image',
  }),
}))
export const relations_categories = relations(categories, ({ one, many }) => ({
  image: one(images, {
    fields: [categories.image],
    references: [images.id],
    relationName: 'image',
  }),
  _blocks_templateBlock: many(categories_blocks_template_block, {
    relationName: '_blocks_templateBlock',
  }),
  _blocks_heroBlock: many(categories_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(categories_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(categories_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(categories_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(categories_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(categories_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(categories_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
  _blocks_productsBlock: many(categories_blocks_products_block, {
    relationName: '_blocks_productsBlock',
  }),
  _locales: many(categories_locales, {
    relationName: '_locales',
  }),
}))
export const relations__categories_v_blocks_template_block = relations(
  _categories_v_blocks_template_block,
  ({ one }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_template_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_templateBlock',
    }),
    template: one(templates, {
      fields: [_categories_v_blocks_template_block.template],
      references: [templates.id],
      relationName: 'template',
    }),
  }),
)
export const relations__categories_v_blocks_hero_block = relations(_categories_v_blocks_hero_block, ({ one }) => ({
  _parentID: one(_categories_v, {
    fields: [_categories_v_blocks_hero_block._parentID],
    references: [_categories_v.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [_categories_v_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations__categories_v_blocks_image_scroller_block_rows = relations(
  _categories_v_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(_categories_v_blocks_image_scroller_block, {
      fields: [_categories_v_blocks_image_scroller_block_rows._parentID],
      references: [_categories_v_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_categories_v_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__categories_v_blocks_image_scroller_block = relations(
  _categories_v_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_image_scroller_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(_categories_v_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__categories_v_blocks_section_block = relations(
  _categories_v_blocks_section_block,
  ({ one }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_section_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_sectionBlock',
    }),
  }),
)
export const relations__categories_v_blocks_list_block_rows = relations(
  _categories_v_blocks_list_block_rows,
  ({ one }) => ({
    _parentID: one(_categories_v_blocks_list_block, {
      fields: [_categories_v_blocks_list_block_rows._parentID],
      references: [_categories_v_blocks_list_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_categories_v_blocks_list_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__categories_v_blocks_list_block = relations(
  _categories_v_blocks_list_block,
  ({ one, many }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_list_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_listBlock',
    }),
    rows: many(_categories_v_blocks_list_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__categories_v_blocks_tabs_block_tabs_rows = relations(
  _categories_v_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(_categories_v_blocks_tabs_block_tabs, {
      fields: [_categories_v_blocks_tabs_block_tabs_rows._parentID],
      references: [_categories_v_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations__categories_v_blocks_tabs_block_tabs = relations(
  _categories_v_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(_categories_v_blocks_tabs_block, {
      fields: [_categories_v_blocks_tabs_block_tabs._parentID],
      references: [_categories_v_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [_categories_v_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(_categories_v_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__categories_v_blocks_tabs_block = relations(
  _categories_v_blocks_tabs_block,
  ({ one, many }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_tabs_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_tabsBlock',
    }),
    tabs: many(_categories_v_blocks_tabs_block_tabs, {
      relationName: 'tabs',
    }),
  }),
)
export const relations__categories_v_blocks_categories_block_categories = relations(
  _categories_v_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(_categories_v_blocks_categories_block, {
      fields: [_categories_v_blocks_categories_block_categories._parentID],
      references: [_categories_v_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [_categories_v_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations__categories_v_blocks_categories_block = relations(
  _categories_v_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_categories_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(_categories_v_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations__categories_v_blocks_feedback_block_form_field_field_options = relations(
  _categories_v_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(_categories_v_blocks_feedback_block, {
      fields: [_categories_v_blocks_feedback_block_form_field_field_options._parentID],
      references: [_categories_v_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__categories_v_blocks_feedback_block = relations(
  _categories_v_blocks_feedback_block,
  ({ one, many }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_feedback_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_feedbackBlock',
    }),
    formField_fieldOptions: many(_categories_v_blocks_feedback_block_form_field_field_options, {
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__categories_v_blocks_products_block = relations(
  _categories_v_blocks_products_block,
  ({ one }) => ({
    _parentID: one(_categories_v, {
      fields: [_categories_v_blocks_products_block._parentID],
      references: [_categories_v.id],
      relationName: '_blocks_productsBlock',
    }),
  }),
)
export const relations__categories_v_locales = relations(_categories_v_locales, ({ one }) => ({
  _parentID: one(_categories_v, {
    fields: [_categories_v_locales._parentID],
    references: [_categories_v.id],
    relationName: '_locales',
  }),
  version_meta_image: one(images, {
    fields: [_categories_v_locales.version_meta_image],
    references: [images.id],
    relationName: 'version_meta_image',
  }),
}))
export const relations__categories_v = relations(_categories_v, ({ one, many }) => ({
  parent: one(categories, {
    fields: [_categories_v.parent],
    references: [categories.id],
    relationName: 'parent',
  }),
  version_image: one(images, {
    fields: [_categories_v.version_image],
    references: [images.id],
    relationName: 'version_image',
  }),
  _blocks_templateBlock: many(_categories_v_blocks_template_block, {
    relationName: '_blocks_templateBlock',
  }),
  _blocks_heroBlock: many(_categories_v_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(_categories_v_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(_categories_v_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(_categories_v_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(_categories_v_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(_categories_v_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(_categories_v_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
  _blocks_productsBlock: many(_categories_v_blocks_products_block, {
    relationName: '_blocks_productsBlock',
  }),
  _locales: many(_categories_v_locales, {
    relationName: '_locales',
  }),
}))
export const relations_products_details_rows = relations(products_details_rows, ({ one }) => ({
  _parentID: one(products_details, {
    fields: [products_details_rows._parentID],
    references: [products_details.id],
    relationName: 'rows',
  }),
}))
export const relations_products_details = relations(products_details, ({ one, many }) => ({
  _parentID: one(products, {
    fields: [products_details._parentID],
    references: [products.id],
    relationName: 'details',
  }),
  rows: many(products_details_rows, {
    relationName: 'rows',
  }),
}))
export const relations_products_blocks_template_block = relations(products_blocks_template_block, ({ one }) => ({
  _parentID: one(products, {
    fields: [products_blocks_template_block._parentID],
    references: [products.id],
    relationName: '_blocks_templateBlock',
  }),
  template: one(templates, {
    fields: [products_blocks_template_block.template],
    references: [templates.id],
    relationName: 'template',
  }),
}))
export const relations_products_blocks_hero_block = relations(products_blocks_hero_block, ({ one }) => ({
  _parentID: one(products, {
    fields: [products_blocks_hero_block._parentID],
    references: [products.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [products_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_products_blocks_image_scroller_block_rows = relations(
  products_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(products_blocks_image_scroller_block, {
      fields: [products_blocks_image_scroller_block_rows._parentID],
      references: [products_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [products_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations_products_blocks_image_scroller_block = relations(
  products_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(products, {
      fields: [products_blocks_image_scroller_block._parentID],
      references: [products.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(products_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_products_blocks_section_block = relations(products_blocks_section_block, ({ one }) => ({
  _parentID: one(products, {
    fields: [products_blocks_section_block._parentID],
    references: [products.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations_products_blocks_list_block_rows = relations(products_blocks_list_block_rows, ({ one }) => ({
  _parentID: one(products_blocks_list_block, {
    fields: [products_blocks_list_block_rows._parentID],
    references: [products_blocks_list_block.id],
    relationName: 'rows',
  }),
  image: one(images, {
    fields: [products_blocks_list_block_rows.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_products_blocks_list_block = relations(products_blocks_list_block, ({ one, many }) => ({
  _parentID: one(products, {
    fields: [products_blocks_list_block._parentID],
    references: [products.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(products_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations_products_blocks_tabs_block_tabs_rows = relations(
  products_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(products_blocks_tabs_block_tabs, {
      fields: [products_blocks_tabs_block_tabs_rows._parentID],
      references: [products_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations_products_blocks_tabs_block_tabs = relations(
  products_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(products_blocks_tabs_block, {
      fields: [products_blocks_tabs_block_tabs._parentID],
      references: [products_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [products_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(products_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_products_blocks_tabs_block = relations(products_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(products, {
    fields: [products_blocks_tabs_block._parentID],
    references: [products.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(products_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations_products_blocks_categories_block_categories = relations(
  products_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(products_blocks_categories_block, {
      fields: [products_blocks_categories_block_categories._parentID],
      references: [products_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [products_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations_products_blocks_categories_block = relations(
  products_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(products, {
      fields: [products_blocks_categories_block._parentID],
      references: [products.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(products_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations_products_blocks_feedback_block_form_field_field_options = relations(
  products_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(products_blocks_feedback_block, {
      fields: [products_blocks_feedback_block_form_field_field_options._parentID],
      references: [products_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations_products_blocks_feedback_block = relations(products_blocks_feedback_block, ({ one, many }) => ({
  _parentID: one(products, {
    fields: [products_blocks_feedback_block._parentID],
    references: [products.id],
    relationName: '_blocks_feedbackBlock',
  }),
  formField_fieldOptions: many(products_blocks_feedback_block_form_field_field_options, {
    relationName: 'formField_fieldOptions',
  }),
}))
export const relations_products_locales = relations(products_locales, ({ one }) => ({
  _parentID: one(products, {
    fields: [products_locales._parentID],
    references: [products.id],
    relationName: '_locales',
  }),
  meta_image: one(images, {
    fields: [products_locales.meta_image],
    references: [images.id],
    relationName: 'meta_image',
  }),
}))
export const relations_products = relations(products, ({ one, many }) => ({
  categories: one(categories, {
    fields: [products.categories],
    references: [categories.id],
    relationName: 'categories',
  }),
  details: many(products_details, {
    relationName: 'details',
  }),
  _blocks_templateBlock: many(products_blocks_template_block, {
    relationName: '_blocks_templateBlock',
  }),
  _blocks_heroBlock: many(products_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(products_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(products_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(products_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(products_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(products_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(products_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
  _locales: many(products_locales, {
    relationName: '_locales',
  }),
}))
export const relations__products_v_version_details_rows = relations(_products_v_version_details_rows, ({ one }) => ({
  _parentID: one(_products_v_version_details, {
    fields: [_products_v_version_details_rows._parentID],
    references: [_products_v_version_details.id],
    relationName: 'rows',
  }),
}))
export const relations__products_v_version_details = relations(_products_v_version_details, ({ one, many }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_version_details._parentID],
    references: [_products_v.id],
    relationName: 'version_details',
  }),
  rows: many(_products_v_version_details_rows, {
    relationName: 'rows',
  }),
}))
export const relations__products_v_blocks_template_block = relations(_products_v_blocks_template_block, ({ one }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_blocks_template_block._parentID],
    references: [_products_v.id],
    relationName: '_blocks_templateBlock',
  }),
  template: one(templates, {
    fields: [_products_v_blocks_template_block.template],
    references: [templates.id],
    relationName: 'template',
  }),
}))
export const relations__products_v_blocks_hero_block = relations(_products_v_blocks_hero_block, ({ one }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_blocks_hero_block._parentID],
    references: [_products_v.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [_products_v_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations__products_v_blocks_image_scroller_block_rows = relations(
  _products_v_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(_products_v_blocks_image_scroller_block, {
      fields: [_products_v_blocks_image_scroller_block_rows._parentID],
      references: [_products_v_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_products_v_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__products_v_blocks_image_scroller_block = relations(
  _products_v_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(_products_v, {
      fields: [_products_v_blocks_image_scroller_block._parentID],
      references: [_products_v.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(_products_v_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__products_v_blocks_section_block = relations(_products_v_blocks_section_block, ({ one }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_blocks_section_block._parentID],
    references: [_products_v.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations__products_v_blocks_list_block_rows = relations(
  _products_v_blocks_list_block_rows,
  ({ one }) => ({
    _parentID: one(_products_v_blocks_list_block, {
      fields: [_products_v_blocks_list_block_rows._parentID],
      references: [_products_v_blocks_list_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_products_v_blocks_list_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__products_v_blocks_list_block = relations(_products_v_blocks_list_block, ({ one, many }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_blocks_list_block._parentID],
    references: [_products_v.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(_products_v_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations__products_v_blocks_tabs_block_tabs_rows = relations(
  _products_v_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(_products_v_blocks_tabs_block_tabs, {
      fields: [_products_v_blocks_tabs_block_tabs_rows._parentID],
      references: [_products_v_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations__products_v_blocks_tabs_block_tabs = relations(
  _products_v_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(_products_v_blocks_tabs_block, {
      fields: [_products_v_blocks_tabs_block_tabs._parentID],
      references: [_products_v_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [_products_v_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(_products_v_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__products_v_blocks_tabs_block = relations(_products_v_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_blocks_tabs_block._parentID],
    references: [_products_v.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(_products_v_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations__products_v_blocks_categories_block_categories = relations(
  _products_v_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(_products_v_blocks_categories_block, {
      fields: [_products_v_blocks_categories_block_categories._parentID],
      references: [_products_v_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [_products_v_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations__products_v_blocks_categories_block = relations(
  _products_v_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(_products_v, {
      fields: [_products_v_blocks_categories_block._parentID],
      references: [_products_v.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(_products_v_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations__products_v_blocks_feedback_block_form_field_field_options = relations(
  _products_v_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(_products_v_blocks_feedback_block, {
      fields: [_products_v_blocks_feedback_block_form_field_field_options._parentID],
      references: [_products_v_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__products_v_blocks_feedback_block = relations(
  _products_v_blocks_feedback_block,
  ({ one, many }) => ({
    _parentID: one(_products_v, {
      fields: [_products_v_blocks_feedback_block._parentID],
      references: [_products_v.id],
      relationName: '_blocks_feedbackBlock',
    }),
    formField_fieldOptions: many(_products_v_blocks_feedback_block_form_field_field_options, {
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__products_v_locales = relations(_products_v_locales, ({ one }) => ({
  _parentID: one(_products_v, {
    fields: [_products_v_locales._parentID],
    references: [_products_v.id],
    relationName: '_locales',
  }),
  version_meta_image: one(images, {
    fields: [_products_v_locales.version_meta_image],
    references: [images.id],
    relationName: 'version_meta_image',
  }),
}))
export const relations__products_v = relations(_products_v, ({ one, many }) => ({
  parent: one(products, {
    fields: [_products_v.parent],
    references: [products.id],
    relationName: 'parent',
  }),
  version_categories: one(categories, {
    fields: [_products_v.version_categories],
    references: [categories.id],
    relationName: 'version_categories',
  }),
  version_details: many(_products_v_version_details, {
    relationName: 'version_details',
  }),
  _blocks_templateBlock: many(_products_v_blocks_template_block, {
    relationName: '_blocks_templateBlock',
  }),
  _blocks_heroBlock: many(_products_v_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(_products_v_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(_products_v_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(_products_v_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(_products_v_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(_products_v_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(_products_v_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
  _locales: many(_products_v_locales, {
    relationName: '_locales',
  }),
}))
export const relations_templates_blocks_hero_block = relations(templates_blocks_hero_block, ({ one }) => ({
  _parentID: one(templates, {
    fields: [templates_blocks_hero_block._parentID],
    references: [templates.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [templates_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_templates_blocks_image_scroller_block_rows = relations(
  templates_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(templates_blocks_image_scroller_block, {
      fields: [templates_blocks_image_scroller_block_rows._parentID],
      references: [templates_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [templates_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations_templates_blocks_image_scroller_block = relations(
  templates_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(templates, {
      fields: [templates_blocks_image_scroller_block._parentID],
      references: [templates.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(templates_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_templates_blocks_section_block = relations(templates_blocks_section_block, ({ one }) => ({
  _parentID: one(templates, {
    fields: [templates_blocks_section_block._parentID],
    references: [templates.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations_templates_blocks_list_block_rows = relations(templates_blocks_list_block_rows, ({ one }) => ({
  _parentID: one(templates_blocks_list_block, {
    fields: [templates_blocks_list_block_rows._parentID],
    references: [templates_blocks_list_block.id],
    relationName: 'rows',
  }),
  image: one(images, {
    fields: [templates_blocks_list_block_rows.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations_templates_blocks_list_block = relations(templates_blocks_list_block, ({ one, many }) => ({
  _parentID: one(templates, {
    fields: [templates_blocks_list_block._parentID],
    references: [templates.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(templates_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations_templates_blocks_tabs_block_tabs_rows = relations(
  templates_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(templates_blocks_tabs_block_tabs, {
      fields: [templates_blocks_tabs_block_tabs_rows._parentID],
      references: [templates_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations_templates_blocks_tabs_block_tabs = relations(
  templates_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(templates_blocks_tabs_block, {
      fields: [templates_blocks_tabs_block_tabs._parentID],
      references: [templates_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [templates_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(templates_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations_templates_blocks_tabs_block = relations(templates_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(templates, {
    fields: [templates_blocks_tabs_block._parentID],
    references: [templates.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(templates_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations_templates_blocks_categories_block_categories = relations(
  templates_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(templates_blocks_categories_block, {
      fields: [templates_blocks_categories_block_categories._parentID],
      references: [templates_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [templates_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations_templates_blocks_categories_block = relations(
  templates_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(templates, {
      fields: [templates_blocks_categories_block._parentID],
      references: [templates.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(templates_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations_templates_blocks_feedback_block_form_field_field_options = relations(
  templates_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(templates_blocks_feedback_block, {
      fields: [templates_blocks_feedback_block_form_field_field_options._parentID],
      references: [templates_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations_templates_blocks_feedback_block = relations(
  templates_blocks_feedback_block,
  ({ one, many }) => ({
    _parentID: one(templates, {
      fields: [templates_blocks_feedback_block._parentID],
      references: [templates.id],
      relationName: '_blocks_feedbackBlock',
    }),
    formField_fieldOptions: many(templates_blocks_feedback_block_form_field_field_options, {
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations_templates = relations(templates, ({ many }) => ({
  _blocks_heroBlock: many(templates_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(templates_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(templates_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(templates_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(templates_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(templates_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(templates_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
}))
export const relations__templates_v_blocks_hero_block = relations(_templates_v_blocks_hero_block, ({ one }) => ({
  _parentID: one(_templates_v, {
    fields: [_templates_v_blocks_hero_block._parentID],
    references: [_templates_v.id],
    relationName: '_blocks_heroBlock',
  }),
  image: one(images, {
    fields: [_templates_v_blocks_hero_block.image],
    references: [images.id],
    relationName: 'image',
  }),
}))
export const relations__templates_v_blocks_image_scroller_block_rows = relations(
  _templates_v_blocks_image_scroller_block_rows,
  ({ one }) => ({
    _parentID: one(_templates_v_blocks_image_scroller_block, {
      fields: [_templates_v_blocks_image_scroller_block_rows._parentID],
      references: [_templates_v_blocks_image_scroller_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_templates_v_blocks_image_scroller_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__templates_v_blocks_image_scroller_block = relations(
  _templates_v_blocks_image_scroller_block,
  ({ one, many }) => ({
    _parentID: one(_templates_v, {
      fields: [_templates_v_blocks_image_scroller_block._parentID],
      references: [_templates_v.id],
      relationName: '_blocks_imageScrollerBlock',
    }),
    rows: many(_templates_v_blocks_image_scroller_block_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__templates_v_blocks_section_block = relations(_templates_v_blocks_section_block, ({ one }) => ({
  _parentID: one(_templates_v, {
    fields: [_templates_v_blocks_section_block._parentID],
    references: [_templates_v.id],
    relationName: '_blocks_sectionBlock',
  }),
}))
export const relations__templates_v_blocks_list_block_rows = relations(
  _templates_v_blocks_list_block_rows,
  ({ one }) => ({
    _parentID: one(_templates_v_blocks_list_block, {
      fields: [_templates_v_blocks_list_block_rows._parentID],
      references: [_templates_v_blocks_list_block.id],
      relationName: 'rows',
    }),
    image: one(images, {
      fields: [_templates_v_blocks_list_block_rows.image],
      references: [images.id],
      relationName: 'image',
    }),
  }),
)
export const relations__templates_v_blocks_list_block = relations(_templates_v_blocks_list_block, ({ one, many }) => ({
  _parentID: one(_templates_v, {
    fields: [_templates_v_blocks_list_block._parentID],
    references: [_templates_v.id],
    relationName: '_blocks_listBlock',
  }),
  rows: many(_templates_v_blocks_list_block_rows, {
    relationName: 'rows',
  }),
}))
export const relations__templates_v_blocks_tabs_block_tabs_rows = relations(
  _templates_v_blocks_tabs_block_tabs_rows,
  ({ one }) => ({
    _parentID: one(_templates_v_blocks_tabs_block_tabs, {
      fields: [_templates_v_blocks_tabs_block_tabs_rows._parentID],
      references: [_templates_v_blocks_tabs_block_tabs.id],
      relationName: 'rows',
    }),
  }),
)
export const relations__templates_v_blocks_tabs_block_tabs = relations(
  _templates_v_blocks_tabs_block_tabs,
  ({ one, many }) => ({
    _parentID: one(_templates_v_blocks_tabs_block, {
      fields: [_templates_v_blocks_tabs_block_tabs._parentID],
      references: [_templates_v_blocks_tabs_block.id],
      relationName: 'tabs',
    }),
    image: one(images, {
      fields: [_templates_v_blocks_tabs_block_tabs.image],
      references: [images.id],
      relationName: 'image',
    }),
    rows: many(_templates_v_blocks_tabs_block_tabs_rows, {
      relationName: 'rows',
    }),
  }),
)
export const relations__templates_v_blocks_tabs_block = relations(_templates_v_blocks_tabs_block, ({ one, many }) => ({
  _parentID: one(_templates_v, {
    fields: [_templates_v_blocks_tabs_block._parentID],
    references: [_templates_v.id],
    relationName: '_blocks_tabsBlock',
  }),
  tabs: many(_templates_v_blocks_tabs_block_tabs, {
    relationName: 'tabs',
  }),
}))
export const relations__templates_v_blocks_categories_block_categories = relations(
  _templates_v_blocks_categories_block_categories,
  ({ one }) => ({
    _parentID: one(_templates_v_blocks_categories_block, {
      fields: [_templates_v_blocks_categories_block_categories._parentID],
      references: [_templates_v_blocks_categories_block.id],
      relationName: 'categories',
    }),
    category: one(categories, {
      fields: [_templates_v_blocks_categories_block_categories.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations__templates_v_blocks_categories_block = relations(
  _templates_v_blocks_categories_block,
  ({ one, many }) => ({
    _parentID: one(_templates_v, {
      fields: [_templates_v_blocks_categories_block._parentID],
      references: [_templates_v.id],
      relationName: '_blocks_categoriesBlock',
    }),
    categories: many(_templates_v_blocks_categories_block_categories, {
      relationName: 'categories',
    }),
  }),
)
export const relations__templates_v_blocks_feedback_block_form_field_field_options = relations(
  _templates_v_blocks_feedback_block_form_field_field_options,
  ({ one }) => ({
    _parentID: one(_templates_v_blocks_feedback_block, {
      fields: [_templates_v_blocks_feedback_block_form_field_field_options._parentID],
      references: [_templates_v_blocks_feedback_block.id],
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__templates_v_blocks_feedback_block = relations(
  _templates_v_blocks_feedback_block,
  ({ one, many }) => ({
    _parentID: one(_templates_v, {
      fields: [_templates_v_blocks_feedback_block._parentID],
      references: [_templates_v.id],
      relationName: '_blocks_feedbackBlock',
    }),
    formField_fieldOptions: many(_templates_v_blocks_feedback_block_form_field_field_options, {
      relationName: 'formField_fieldOptions',
    }),
  }),
)
export const relations__templates_v = relations(_templates_v, ({ one, many }) => ({
  parent: one(templates, {
    fields: [_templates_v.parent],
    references: [templates.id],
    relationName: 'parent',
  }),
  _blocks_heroBlock: many(_templates_v_blocks_hero_block, {
    relationName: '_blocks_heroBlock',
  }),
  _blocks_imageScrollerBlock: many(_templates_v_blocks_image_scroller_block, {
    relationName: '_blocks_imageScrollerBlock',
  }),
  _blocks_sectionBlock: many(_templates_v_blocks_section_block, {
    relationName: '_blocks_sectionBlock',
  }),
  _blocks_listBlock: many(_templates_v_blocks_list_block, {
    relationName: '_blocks_listBlock',
  }),
  _blocks_tabsBlock: many(_templates_v_blocks_tabs_block, {
    relationName: '_blocks_tabsBlock',
  }),
  _blocks_categoriesBlock: many(_templates_v_blocks_categories_block, {
    relationName: '_blocks_categoriesBlock',
  }),
  _blocks_feedbackBlock: many(_templates_v_blocks_feedback_block, {
    relationName: '_blocks_feedbackBlock',
  }),
}))
export const relations_images = relations(images, () => ({}))
export const relations_users_sessions = relations(users_sessions, ({ one }) => ({
  _parentID: one(users, {
    fields: [users_sessions._parentID],
    references: [users.id],
    relationName: 'sessions',
  }),
}))
export const relations_users = relations(users, ({ many }) => ({
  sessions: many(users_sessions, {
    relationName: 'sessions',
  }),
}))
export const relations_payload_locked_documents_rels = relations(payload_locked_documents_rels, ({ one }) => ({
  parent: one(payload_locked_documents, {
    fields: [payload_locked_documents_rels.parent],
    references: [payload_locked_documents.id],
    relationName: '_rels',
  }),
  pagesID: one(pages, {
    fields: [payload_locked_documents_rels.pagesID],
    references: [pages.id],
    relationName: 'pages',
  }),
  categoriesID: one(categories, {
    fields: [payload_locked_documents_rels.categoriesID],
    references: [categories.id],
    relationName: 'categories',
  }),
  productsID: one(products, {
    fields: [payload_locked_documents_rels.productsID],
    references: [products.id],
    relationName: 'products',
  }),
  templatesID: one(templates, {
    fields: [payload_locked_documents_rels.templatesID],
    references: [templates.id],
    relationName: 'templates',
  }),
  imagesID: one(images, {
    fields: [payload_locked_documents_rels.imagesID],
    references: [images.id],
    relationName: 'images',
  }),
  usersID: one(users, {
    fields: [payload_locked_documents_rels.usersID],
    references: [users.id],
    relationName: 'users',
  }),
}))
export const relations_payload_locked_documents = relations(payload_locked_documents, ({ many }) => ({
  _rels: many(payload_locked_documents_rels, {
    relationName: '_rels',
  }),
}))
export const relations_payload_preferences_rels = relations(payload_preferences_rels, ({ one }) => ({
  parent: one(payload_preferences, {
    fields: [payload_preferences_rels.parent],
    references: [payload_preferences.id],
    relationName: '_rels',
  }),
  usersID: one(users, {
    fields: [payload_preferences_rels.usersID],
    references: [users.id],
    relationName: 'users',
  }),
}))
export const relations_payload_preferences = relations(payload_preferences, ({ many }) => ({
  _rels: many(payload_preferences_rels, {
    relationName: '_rels',
  }),
}))
export const relations_payload_migrations = relations(payload_migrations, () => ({}))
export const relations_layout_blocks_header_block_actions = relations(
  layout_blocks_header_block_actions,
  ({ one }) => ({
    _parentID: one(layout_blocks_header_block, {
      fields: [layout_blocks_header_block_actions._parentID],
      references: [layout_blocks_header_block.id],
      relationName: 'actions',
    }),
  }),
)
export const relations_layout_blocks_header_block = relations(layout_blocks_header_block, ({ one, many }) => ({
  _parentID: one(layout, {
    fields: [layout_blocks_header_block._parentID],
    references: [layout.id],
    relationName: '_blocks_headerBlock',
  }),
  actions: many(layout_blocks_header_block_actions, {
    relationName: 'actions',
  }),
}))
export const relations_layout_blocks_footer_block_columns_links = relations(
  layout_blocks_footer_block_columns_links,
  ({ one }) => ({
    _parentID: one(layout_blocks_footer_block_columns, {
      fields: [layout_blocks_footer_block_columns_links._parentID],
      references: [layout_blocks_footer_block_columns.id],
      relationName: 'links',
    }),
  }),
)
export const relations_layout_blocks_footer_block_columns = relations(
  layout_blocks_footer_block_columns,
  ({ one, many }) => ({
    _parentID: one(layout_blocks_footer_block, {
      fields: [layout_blocks_footer_block_columns._parentID],
      references: [layout_blocks_footer_block.id],
      relationName: 'columns',
    }),
    links: many(layout_blocks_footer_block_columns_links, {
      relationName: 'links',
    }),
  }),
)
export const relations_layout_blocks_footer_block = relations(layout_blocks_footer_block, ({ one, many }) => ({
  _parentID: one(layout, {
    fields: [layout_blocks_footer_block._parentID],
    references: [layout.id],
    relationName: '_blocks_footerBlock',
  }),
  columns: many(layout_blocks_footer_block_columns, {
    relationName: 'columns',
  }),
}))
export const relations_layout_branding_social_media_links = relations(
  layout_branding_social_media_links,
  ({ one }) => ({
    _parentID: one(layout, {
      fields: [layout_branding_social_media_links._parentID],
      references: [layout.id],
      relationName: 'branding_socialMediaLinks',
    }),
  }),
)
export const relations_layout_locales = relations(layout_locales, ({ one }) => ({
  _parentID: one(layout, {
    fields: [layout_locales._parentID],
    references: [layout.id],
    relationName: '_locales',
  }),
  meta_image: one(images, {
    fields: [layout_locales.meta_image],
    references: [images.id],
    relationName: 'meta_image',
  }),
}))
export const relations_layout = relations(layout, ({ one, many }) => ({
  _blocks_headerBlock: many(layout_blocks_header_block, {
    relationName: '_blocks_headerBlock',
  }),
  _blocks_footerBlock: many(layout_blocks_footer_block, {
    relationName: '_blocks_footerBlock',
  }),
  branding_logoImage: one(images, {
    fields: [layout.branding_logoImage],
    references: [images.id],
    relationName: 'branding_logoImage',
  }),
  branding_favicon: one(images, {
    fields: [layout.branding_favicon],
    references: [images.id],
    relationName: 'branding_favicon',
  }),
  branding_socialMediaLinks: many(layout_branding_social_media_links, {
    relationName: 'branding_socialMediaLinks',
  }),
  _locales: many(layout_locales, {
    relationName: '_locales',
  }),
}))
export const relations__layout_v_blocks_header_block_actions = relations(
  _layout_v_blocks_header_block_actions,
  ({ one }) => ({
    _parentID: one(_layout_v_blocks_header_block, {
      fields: [_layout_v_blocks_header_block_actions._parentID],
      references: [_layout_v_blocks_header_block.id],
      relationName: 'actions',
    }),
  }),
)
export const relations__layout_v_blocks_header_block = relations(_layout_v_blocks_header_block, ({ one, many }) => ({
  _parentID: one(_layout_v, {
    fields: [_layout_v_blocks_header_block._parentID],
    references: [_layout_v.id],
    relationName: '_blocks_headerBlock',
  }),
  actions: many(_layout_v_blocks_header_block_actions, {
    relationName: 'actions',
  }),
}))
export const relations__layout_v_blocks_footer_block_columns_links = relations(
  _layout_v_blocks_footer_block_columns_links,
  ({ one }) => ({
    _parentID: one(_layout_v_blocks_footer_block_columns, {
      fields: [_layout_v_blocks_footer_block_columns_links._parentID],
      references: [_layout_v_blocks_footer_block_columns.id],
      relationName: 'links',
    }),
  }),
)
export const relations__layout_v_blocks_footer_block_columns = relations(
  _layout_v_blocks_footer_block_columns,
  ({ one, many }) => ({
    _parentID: one(_layout_v_blocks_footer_block, {
      fields: [_layout_v_blocks_footer_block_columns._parentID],
      references: [_layout_v_blocks_footer_block.id],
      relationName: 'columns',
    }),
    links: many(_layout_v_blocks_footer_block_columns_links, {
      relationName: 'links',
    }),
  }),
)
export const relations__layout_v_blocks_footer_block = relations(_layout_v_blocks_footer_block, ({ one, many }) => ({
  _parentID: one(_layout_v, {
    fields: [_layout_v_blocks_footer_block._parentID],
    references: [_layout_v.id],
    relationName: '_blocks_footerBlock',
  }),
  columns: many(_layout_v_blocks_footer_block_columns, {
    relationName: 'columns',
  }),
}))
export const relations__layout_v_version_branding_social_media_links = relations(
  _layout_v_version_branding_social_media_links,
  ({ one }) => ({
    _parentID: one(_layout_v, {
      fields: [_layout_v_version_branding_social_media_links._parentID],
      references: [_layout_v.id],
      relationName: 'version_branding_socialMediaLinks',
    }),
  }),
)
export const relations__layout_v_locales = relations(_layout_v_locales, ({ one }) => ({
  _parentID: one(_layout_v, {
    fields: [_layout_v_locales._parentID],
    references: [_layout_v.id],
    relationName: '_locales',
  }),
  version_meta_image: one(images, {
    fields: [_layout_v_locales.version_meta_image],
    references: [images.id],
    relationName: 'version_meta_image',
  }),
}))
export const relations__layout_v = relations(_layout_v, ({ one, many }) => ({
  _blocks_headerBlock: many(_layout_v_blocks_header_block, {
    relationName: '_blocks_headerBlock',
  }),
  _blocks_footerBlock: many(_layout_v_blocks_footer_block, {
    relationName: '_blocks_footerBlock',
  }),
  version_branding_logoImage: one(images, {
    fields: [_layout_v.version_branding_logoImage],
    references: [images.id],
    relationName: 'version_branding_logoImage',
  }),
  version_branding_favicon: one(images, {
    fields: [_layout_v.version_branding_favicon],
    references: [images.id],
    relationName: 'version_branding_favicon',
  }),
  version_branding_socialMediaLinks: many(_layout_v_version_branding_social_media_links, {
    relationName: 'version_branding_socialMediaLinks',
  }),
  _locales: many(_layout_v_locales, {
    relationName: '_locales',
  }),
}))

type DatabaseSchema = {
  enum__locales: typeof enum__locales
  action_type: typeof action_type
  icon_position: typeof icon_position
  link_color: typeof link_color
  link_variant: typeof link_variant
  btn_color: typeof btn_color
  btn_variant: typeof btn_variant
  content_align: typeof content_align
  text_align: typeof text_align
  card_block_type: typeof card_block_type
  field_type: typeof field_type
  enum_pages_status: typeof enum_pages_status
  enum__pages_v_version_status: typeof enum__pages_v_version_status
  enum__pages_v_published_locale: typeof enum__pages_v_published_locale
  include_products: typeof include_products
  enum_categories_status: typeof enum_categories_status
  enum__categories_v_version_status: typeof enum__categories_v_version_status
  enum__categories_v_published_locale: typeof enum__categories_v_published_locale
  enum_products_status: typeof enum_products_status
  enum__products_v_version_status: typeof enum__products_v_version_status
  enum__products_v_published_locale: typeof enum__products_v_published_locale
  enum_templates_status: typeof enum_templates_status
  enum__templates_v_version_status: typeof enum__templates_v_version_status
  enum__templates_v_published_locale: typeof enum__templates_v_published_locale
  role: typeof role
  social_platform: typeof social_platform
  enum_layout_status: typeof enum_layout_status
  enum__layout_v_version_status: typeof enum__layout_v_version_status
  enum__layout_v_published_locale: typeof enum__layout_v_published_locale
  pages_blocks_template_block: typeof pages_blocks_template_block
  pages_blocks_hero_block: typeof pages_blocks_hero_block
  pages_blocks_image_scroller_block_rows: typeof pages_blocks_image_scroller_block_rows
  pages_blocks_image_scroller_block: typeof pages_blocks_image_scroller_block
  pages_blocks_section_block: typeof pages_blocks_section_block
  pages_blocks_list_block_rows: typeof pages_blocks_list_block_rows
  pages_blocks_list_block: typeof pages_blocks_list_block
  pages_blocks_tabs_block_tabs_rows: typeof pages_blocks_tabs_block_tabs_rows
  pages_blocks_tabs_block_tabs: typeof pages_blocks_tabs_block_tabs
  pages_blocks_tabs_block: typeof pages_blocks_tabs_block
  pages_blocks_categories_block_categories: typeof pages_blocks_categories_block_categories
  pages_blocks_categories_block: typeof pages_blocks_categories_block
  pages_blocks_feedback_block_form_field_field_options: typeof pages_blocks_feedback_block_form_field_field_options
  pages_blocks_feedback_block: typeof pages_blocks_feedback_block
  pages: typeof pages
  pages_locales: typeof pages_locales
  _pages_v_blocks_template_block: typeof _pages_v_blocks_template_block
  _pages_v_blocks_hero_block: typeof _pages_v_blocks_hero_block
  _pages_v_blocks_image_scroller_block_rows: typeof _pages_v_blocks_image_scroller_block_rows
  _pages_v_blocks_image_scroller_block: typeof _pages_v_blocks_image_scroller_block
  _pages_v_blocks_section_block: typeof _pages_v_blocks_section_block
  _pages_v_blocks_list_block_rows: typeof _pages_v_blocks_list_block_rows
  _pages_v_blocks_list_block: typeof _pages_v_blocks_list_block
  _pages_v_blocks_tabs_block_tabs_rows: typeof _pages_v_blocks_tabs_block_tabs_rows
  _pages_v_blocks_tabs_block_tabs: typeof _pages_v_blocks_tabs_block_tabs
  _pages_v_blocks_tabs_block: typeof _pages_v_blocks_tabs_block
  _pages_v_blocks_categories_block_categories: typeof _pages_v_blocks_categories_block_categories
  _pages_v_blocks_categories_block: typeof _pages_v_blocks_categories_block
  _pages_v_blocks_feedback_block_form_field_field_options: typeof _pages_v_blocks_feedback_block_form_field_field_options
  _pages_v_blocks_feedback_block: typeof _pages_v_blocks_feedback_block
  _pages_v: typeof _pages_v
  _pages_v_locales: typeof _pages_v_locales
  categories_blocks_template_block: typeof categories_blocks_template_block
  categories_blocks_hero_block: typeof categories_blocks_hero_block
  categories_blocks_image_scroller_block_rows: typeof categories_blocks_image_scroller_block_rows
  categories_blocks_image_scroller_block: typeof categories_blocks_image_scroller_block
  categories_blocks_section_block: typeof categories_blocks_section_block
  categories_blocks_list_block_rows: typeof categories_blocks_list_block_rows
  categories_blocks_list_block: typeof categories_blocks_list_block
  categories_blocks_tabs_block_tabs_rows: typeof categories_blocks_tabs_block_tabs_rows
  categories_blocks_tabs_block_tabs: typeof categories_blocks_tabs_block_tabs
  categories_blocks_tabs_block: typeof categories_blocks_tabs_block
  categories_blocks_categories_block_categories: typeof categories_blocks_categories_block_categories
  categories_blocks_categories_block: typeof categories_blocks_categories_block
  categories_blocks_feedback_block_form_field_field_options: typeof categories_blocks_feedback_block_form_field_field_options
  categories_blocks_feedback_block: typeof categories_blocks_feedback_block
  categories_blocks_products_block: typeof categories_blocks_products_block
  categories: typeof categories
  categories_locales: typeof categories_locales
  _categories_v_blocks_template_block: typeof _categories_v_blocks_template_block
  _categories_v_blocks_hero_block: typeof _categories_v_blocks_hero_block
  _categories_v_blocks_image_scroller_block_rows: typeof _categories_v_blocks_image_scroller_block_rows
  _categories_v_blocks_image_scroller_block: typeof _categories_v_blocks_image_scroller_block
  _categories_v_blocks_section_block: typeof _categories_v_blocks_section_block
  _categories_v_blocks_list_block_rows: typeof _categories_v_blocks_list_block_rows
  _categories_v_blocks_list_block: typeof _categories_v_blocks_list_block
  _categories_v_blocks_tabs_block_tabs_rows: typeof _categories_v_blocks_tabs_block_tabs_rows
  _categories_v_blocks_tabs_block_tabs: typeof _categories_v_blocks_tabs_block_tabs
  _categories_v_blocks_tabs_block: typeof _categories_v_blocks_tabs_block
  _categories_v_blocks_categories_block_categories: typeof _categories_v_blocks_categories_block_categories
  _categories_v_blocks_categories_block: typeof _categories_v_blocks_categories_block
  _categories_v_blocks_feedback_block_form_field_field_options: typeof _categories_v_blocks_feedback_block_form_field_field_options
  _categories_v_blocks_feedback_block: typeof _categories_v_blocks_feedback_block
  _categories_v_blocks_products_block: typeof _categories_v_blocks_products_block
  _categories_v: typeof _categories_v
  _categories_v_locales: typeof _categories_v_locales
  products_details_rows: typeof products_details_rows
  products_details: typeof products_details
  products_blocks_template_block: typeof products_blocks_template_block
  products_blocks_hero_block: typeof products_blocks_hero_block
  products_blocks_image_scroller_block_rows: typeof products_blocks_image_scroller_block_rows
  products_blocks_image_scroller_block: typeof products_blocks_image_scroller_block
  products_blocks_section_block: typeof products_blocks_section_block
  products_blocks_list_block_rows: typeof products_blocks_list_block_rows
  products_blocks_list_block: typeof products_blocks_list_block
  products_blocks_tabs_block_tabs_rows: typeof products_blocks_tabs_block_tabs_rows
  products_blocks_tabs_block_tabs: typeof products_blocks_tabs_block_tabs
  products_blocks_tabs_block: typeof products_blocks_tabs_block
  products_blocks_categories_block_categories: typeof products_blocks_categories_block_categories
  products_blocks_categories_block: typeof products_blocks_categories_block
  products_blocks_feedback_block_form_field_field_options: typeof products_blocks_feedback_block_form_field_field_options
  products_blocks_feedback_block: typeof products_blocks_feedback_block
  products: typeof products
  products_locales: typeof products_locales
  _products_v_version_details_rows: typeof _products_v_version_details_rows
  _products_v_version_details: typeof _products_v_version_details
  _products_v_blocks_template_block: typeof _products_v_blocks_template_block
  _products_v_blocks_hero_block: typeof _products_v_blocks_hero_block
  _products_v_blocks_image_scroller_block_rows: typeof _products_v_blocks_image_scroller_block_rows
  _products_v_blocks_image_scroller_block: typeof _products_v_blocks_image_scroller_block
  _products_v_blocks_section_block: typeof _products_v_blocks_section_block
  _products_v_blocks_list_block_rows: typeof _products_v_blocks_list_block_rows
  _products_v_blocks_list_block: typeof _products_v_blocks_list_block
  _products_v_blocks_tabs_block_tabs_rows: typeof _products_v_blocks_tabs_block_tabs_rows
  _products_v_blocks_tabs_block_tabs: typeof _products_v_blocks_tabs_block_tabs
  _products_v_blocks_tabs_block: typeof _products_v_blocks_tabs_block
  _products_v_blocks_categories_block_categories: typeof _products_v_blocks_categories_block_categories
  _products_v_blocks_categories_block: typeof _products_v_blocks_categories_block
  _products_v_blocks_feedback_block_form_field_field_options: typeof _products_v_blocks_feedback_block_form_field_field_options
  _products_v_blocks_feedback_block: typeof _products_v_blocks_feedback_block
  _products_v: typeof _products_v
  _products_v_locales: typeof _products_v_locales
  templates_blocks_hero_block: typeof templates_blocks_hero_block
  templates_blocks_image_scroller_block_rows: typeof templates_blocks_image_scroller_block_rows
  templates_blocks_image_scroller_block: typeof templates_blocks_image_scroller_block
  templates_blocks_section_block: typeof templates_blocks_section_block
  templates_blocks_list_block_rows: typeof templates_blocks_list_block_rows
  templates_blocks_list_block: typeof templates_blocks_list_block
  templates_blocks_tabs_block_tabs_rows: typeof templates_blocks_tabs_block_tabs_rows
  templates_blocks_tabs_block_tabs: typeof templates_blocks_tabs_block_tabs
  templates_blocks_tabs_block: typeof templates_blocks_tabs_block
  templates_blocks_categories_block_categories: typeof templates_blocks_categories_block_categories
  templates_blocks_categories_block: typeof templates_blocks_categories_block
  templates_blocks_feedback_block_form_field_field_options: typeof templates_blocks_feedback_block_form_field_field_options
  templates_blocks_feedback_block: typeof templates_blocks_feedback_block
  templates: typeof templates
  _templates_v_blocks_hero_block: typeof _templates_v_blocks_hero_block
  _templates_v_blocks_image_scroller_block_rows: typeof _templates_v_blocks_image_scroller_block_rows
  _templates_v_blocks_image_scroller_block: typeof _templates_v_blocks_image_scroller_block
  _templates_v_blocks_section_block: typeof _templates_v_blocks_section_block
  _templates_v_blocks_list_block_rows: typeof _templates_v_blocks_list_block_rows
  _templates_v_blocks_list_block: typeof _templates_v_blocks_list_block
  _templates_v_blocks_tabs_block_tabs_rows: typeof _templates_v_blocks_tabs_block_tabs_rows
  _templates_v_blocks_tabs_block_tabs: typeof _templates_v_blocks_tabs_block_tabs
  _templates_v_blocks_tabs_block: typeof _templates_v_blocks_tabs_block
  _templates_v_blocks_categories_block_categories: typeof _templates_v_blocks_categories_block_categories
  _templates_v_blocks_categories_block: typeof _templates_v_blocks_categories_block
  _templates_v_blocks_feedback_block_form_field_field_options: typeof _templates_v_blocks_feedback_block_form_field_field_options
  _templates_v_blocks_feedback_block: typeof _templates_v_blocks_feedback_block
  _templates_v: typeof _templates_v
  images: typeof images
  users_sessions: typeof users_sessions
  users: typeof users
  payload_locked_documents: typeof payload_locked_documents
  payload_locked_documents_rels: typeof payload_locked_documents_rels
  payload_preferences: typeof payload_preferences
  payload_preferences_rels: typeof payload_preferences_rels
  payload_migrations: typeof payload_migrations
  layout_blocks_header_block_actions: typeof layout_blocks_header_block_actions
  layout_blocks_header_block: typeof layout_blocks_header_block
  layout_blocks_footer_block_columns_links: typeof layout_blocks_footer_block_columns_links
  layout_blocks_footer_block_columns: typeof layout_blocks_footer_block_columns
  layout_blocks_footer_block: typeof layout_blocks_footer_block
  layout_branding_social_media_links: typeof layout_branding_social_media_links
  layout: typeof layout
  layout_locales: typeof layout_locales
  _layout_v_blocks_header_block_actions: typeof _layout_v_blocks_header_block_actions
  _layout_v_blocks_header_block: typeof _layout_v_blocks_header_block
  _layout_v_blocks_footer_block_columns_links: typeof _layout_v_blocks_footer_block_columns_links
  _layout_v_blocks_footer_block_columns: typeof _layout_v_blocks_footer_block_columns
  _layout_v_blocks_footer_block: typeof _layout_v_blocks_footer_block
  _layout_v_version_branding_social_media_links: typeof _layout_v_version_branding_social_media_links
  _layout_v: typeof _layout_v
  _layout_v_locales: typeof _layout_v_locales
  relations_pages_blocks_template_block: typeof relations_pages_blocks_template_block
  relations_pages_blocks_hero_block: typeof relations_pages_blocks_hero_block
  relations_pages_blocks_image_scroller_block_rows: typeof relations_pages_blocks_image_scroller_block_rows
  relations_pages_blocks_image_scroller_block: typeof relations_pages_blocks_image_scroller_block
  relations_pages_blocks_section_block: typeof relations_pages_blocks_section_block
  relations_pages_blocks_list_block_rows: typeof relations_pages_blocks_list_block_rows
  relations_pages_blocks_list_block: typeof relations_pages_blocks_list_block
  relations_pages_blocks_tabs_block_tabs_rows: typeof relations_pages_blocks_tabs_block_tabs_rows
  relations_pages_blocks_tabs_block_tabs: typeof relations_pages_blocks_tabs_block_tabs
  relations_pages_blocks_tabs_block: typeof relations_pages_blocks_tabs_block
  relations_pages_blocks_categories_block_categories: typeof relations_pages_blocks_categories_block_categories
  relations_pages_blocks_categories_block: typeof relations_pages_blocks_categories_block
  relations_pages_blocks_feedback_block_form_field_field_options: typeof relations_pages_blocks_feedback_block_form_field_field_options
  relations_pages_blocks_feedback_block: typeof relations_pages_blocks_feedback_block
  relations_pages_locales: typeof relations_pages_locales
  relations_pages: typeof relations_pages
  relations__pages_v_blocks_template_block: typeof relations__pages_v_blocks_template_block
  relations__pages_v_blocks_hero_block: typeof relations__pages_v_blocks_hero_block
  relations__pages_v_blocks_image_scroller_block_rows: typeof relations__pages_v_blocks_image_scroller_block_rows
  relations__pages_v_blocks_image_scroller_block: typeof relations__pages_v_blocks_image_scroller_block
  relations__pages_v_blocks_section_block: typeof relations__pages_v_blocks_section_block
  relations__pages_v_blocks_list_block_rows: typeof relations__pages_v_blocks_list_block_rows
  relations__pages_v_blocks_list_block: typeof relations__pages_v_blocks_list_block
  relations__pages_v_blocks_tabs_block_tabs_rows: typeof relations__pages_v_blocks_tabs_block_tabs_rows
  relations__pages_v_blocks_tabs_block_tabs: typeof relations__pages_v_blocks_tabs_block_tabs
  relations__pages_v_blocks_tabs_block: typeof relations__pages_v_blocks_tabs_block
  relations__pages_v_blocks_categories_block_categories: typeof relations__pages_v_blocks_categories_block_categories
  relations__pages_v_blocks_categories_block: typeof relations__pages_v_blocks_categories_block
  relations__pages_v_blocks_feedback_block_form_field_field_options: typeof relations__pages_v_blocks_feedback_block_form_field_field_options
  relations__pages_v_blocks_feedback_block: typeof relations__pages_v_blocks_feedback_block
  relations__pages_v_locales: typeof relations__pages_v_locales
  relations__pages_v: typeof relations__pages_v
  relations_categories_blocks_template_block: typeof relations_categories_blocks_template_block
  relations_categories_blocks_hero_block: typeof relations_categories_blocks_hero_block
  relations_categories_blocks_image_scroller_block_rows: typeof relations_categories_blocks_image_scroller_block_rows
  relations_categories_blocks_image_scroller_block: typeof relations_categories_blocks_image_scroller_block
  relations_categories_blocks_section_block: typeof relations_categories_blocks_section_block
  relations_categories_blocks_list_block_rows: typeof relations_categories_blocks_list_block_rows
  relations_categories_blocks_list_block: typeof relations_categories_blocks_list_block
  relations_categories_blocks_tabs_block_tabs_rows: typeof relations_categories_blocks_tabs_block_tabs_rows
  relations_categories_blocks_tabs_block_tabs: typeof relations_categories_blocks_tabs_block_tabs
  relations_categories_blocks_tabs_block: typeof relations_categories_blocks_tabs_block
  relations_categories_blocks_categories_block_categories: typeof relations_categories_blocks_categories_block_categories
  relations_categories_blocks_categories_block: typeof relations_categories_blocks_categories_block
  relations_categories_blocks_feedback_block_form_field_field_options: typeof relations_categories_blocks_feedback_block_form_field_field_options
  relations_categories_blocks_feedback_block: typeof relations_categories_blocks_feedback_block
  relations_categories_blocks_products_block: typeof relations_categories_blocks_products_block
  relations_categories_locales: typeof relations_categories_locales
  relations_categories: typeof relations_categories
  relations__categories_v_blocks_template_block: typeof relations__categories_v_blocks_template_block
  relations__categories_v_blocks_hero_block: typeof relations__categories_v_blocks_hero_block
  relations__categories_v_blocks_image_scroller_block_rows: typeof relations__categories_v_blocks_image_scroller_block_rows
  relations__categories_v_blocks_image_scroller_block: typeof relations__categories_v_blocks_image_scroller_block
  relations__categories_v_blocks_section_block: typeof relations__categories_v_blocks_section_block
  relations__categories_v_blocks_list_block_rows: typeof relations__categories_v_blocks_list_block_rows
  relations__categories_v_blocks_list_block: typeof relations__categories_v_blocks_list_block
  relations__categories_v_blocks_tabs_block_tabs_rows: typeof relations__categories_v_blocks_tabs_block_tabs_rows
  relations__categories_v_blocks_tabs_block_tabs: typeof relations__categories_v_blocks_tabs_block_tabs
  relations__categories_v_blocks_tabs_block: typeof relations__categories_v_blocks_tabs_block
  relations__categories_v_blocks_categories_block_categories: typeof relations__categories_v_blocks_categories_block_categories
  relations__categories_v_blocks_categories_block: typeof relations__categories_v_blocks_categories_block
  relations__categories_v_blocks_feedback_block_form_field_field_options: typeof relations__categories_v_blocks_feedback_block_form_field_field_options
  relations__categories_v_blocks_feedback_block: typeof relations__categories_v_blocks_feedback_block
  relations__categories_v_blocks_products_block: typeof relations__categories_v_blocks_products_block
  relations__categories_v_locales: typeof relations__categories_v_locales
  relations__categories_v: typeof relations__categories_v
  relations_products_details_rows: typeof relations_products_details_rows
  relations_products_details: typeof relations_products_details
  relations_products_blocks_template_block: typeof relations_products_blocks_template_block
  relations_products_blocks_hero_block: typeof relations_products_blocks_hero_block
  relations_products_blocks_image_scroller_block_rows: typeof relations_products_blocks_image_scroller_block_rows
  relations_products_blocks_image_scroller_block: typeof relations_products_blocks_image_scroller_block
  relations_products_blocks_section_block: typeof relations_products_blocks_section_block
  relations_products_blocks_list_block_rows: typeof relations_products_blocks_list_block_rows
  relations_products_blocks_list_block: typeof relations_products_blocks_list_block
  relations_products_blocks_tabs_block_tabs_rows: typeof relations_products_blocks_tabs_block_tabs_rows
  relations_products_blocks_tabs_block_tabs: typeof relations_products_blocks_tabs_block_tabs
  relations_products_blocks_tabs_block: typeof relations_products_blocks_tabs_block
  relations_products_blocks_categories_block_categories: typeof relations_products_blocks_categories_block_categories
  relations_products_blocks_categories_block: typeof relations_products_blocks_categories_block
  relations_products_blocks_feedback_block_form_field_field_options: typeof relations_products_blocks_feedback_block_form_field_field_options
  relations_products_blocks_feedback_block: typeof relations_products_blocks_feedback_block
  relations_products_locales: typeof relations_products_locales
  relations_products: typeof relations_products
  relations__products_v_version_details_rows: typeof relations__products_v_version_details_rows
  relations__products_v_version_details: typeof relations__products_v_version_details
  relations__products_v_blocks_template_block: typeof relations__products_v_blocks_template_block
  relations__products_v_blocks_hero_block: typeof relations__products_v_blocks_hero_block
  relations__products_v_blocks_image_scroller_block_rows: typeof relations__products_v_blocks_image_scroller_block_rows
  relations__products_v_blocks_image_scroller_block: typeof relations__products_v_blocks_image_scroller_block
  relations__products_v_blocks_section_block: typeof relations__products_v_blocks_section_block
  relations__products_v_blocks_list_block_rows: typeof relations__products_v_blocks_list_block_rows
  relations__products_v_blocks_list_block: typeof relations__products_v_blocks_list_block
  relations__products_v_blocks_tabs_block_tabs_rows: typeof relations__products_v_blocks_tabs_block_tabs_rows
  relations__products_v_blocks_tabs_block_tabs: typeof relations__products_v_blocks_tabs_block_tabs
  relations__products_v_blocks_tabs_block: typeof relations__products_v_blocks_tabs_block
  relations__products_v_blocks_categories_block_categories: typeof relations__products_v_blocks_categories_block_categories
  relations__products_v_blocks_categories_block: typeof relations__products_v_blocks_categories_block
  relations__products_v_blocks_feedback_block_form_field_field_options: typeof relations__products_v_blocks_feedback_block_form_field_field_options
  relations__products_v_blocks_feedback_block: typeof relations__products_v_blocks_feedback_block
  relations__products_v_locales: typeof relations__products_v_locales
  relations__products_v: typeof relations__products_v
  relations_templates_blocks_hero_block: typeof relations_templates_blocks_hero_block
  relations_templates_blocks_image_scroller_block_rows: typeof relations_templates_blocks_image_scroller_block_rows
  relations_templates_blocks_image_scroller_block: typeof relations_templates_blocks_image_scroller_block
  relations_templates_blocks_section_block: typeof relations_templates_blocks_section_block
  relations_templates_blocks_list_block_rows: typeof relations_templates_blocks_list_block_rows
  relations_templates_blocks_list_block: typeof relations_templates_blocks_list_block
  relations_templates_blocks_tabs_block_tabs_rows: typeof relations_templates_blocks_tabs_block_tabs_rows
  relations_templates_blocks_tabs_block_tabs: typeof relations_templates_blocks_tabs_block_tabs
  relations_templates_blocks_tabs_block: typeof relations_templates_blocks_tabs_block
  relations_templates_blocks_categories_block_categories: typeof relations_templates_blocks_categories_block_categories
  relations_templates_blocks_categories_block: typeof relations_templates_blocks_categories_block
  relations_templates_blocks_feedback_block_form_field_field_options: typeof relations_templates_blocks_feedback_block_form_field_field_options
  relations_templates_blocks_feedback_block: typeof relations_templates_blocks_feedback_block
  relations_templates: typeof relations_templates
  relations__templates_v_blocks_hero_block: typeof relations__templates_v_blocks_hero_block
  relations__templates_v_blocks_image_scroller_block_rows: typeof relations__templates_v_blocks_image_scroller_block_rows
  relations__templates_v_blocks_image_scroller_block: typeof relations__templates_v_blocks_image_scroller_block
  relations__templates_v_blocks_section_block: typeof relations__templates_v_blocks_section_block
  relations__templates_v_blocks_list_block_rows: typeof relations__templates_v_blocks_list_block_rows
  relations__templates_v_blocks_list_block: typeof relations__templates_v_blocks_list_block
  relations__templates_v_blocks_tabs_block_tabs_rows: typeof relations__templates_v_blocks_tabs_block_tabs_rows
  relations__templates_v_blocks_tabs_block_tabs: typeof relations__templates_v_blocks_tabs_block_tabs
  relations__templates_v_blocks_tabs_block: typeof relations__templates_v_blocks_tabs_block
  relations__templates_v_blocks_categories_block_categories: typeof relations__templates_v_blocks_categories_block_categories
  relations__templates_v_blocks_categories_block: typeof relations__templates_v_blocks_categories_block
  relations__templates_v_blocks_feedback_block_form_field_field_options: typeof relations__templates_v_blocks_feedback_block_form_field_field_options
  relations__templates_v_blocks_feedback_block: typeof relations__templates_v_blocks_feedback_block
  relations__templates_v: typeof relations__templates_v
  relations_images: typeof relations_images
  relations_users_sessions: typeof relations_users_sessions
  relations_users: typeof relations_users
  relations_payload_locked_documents_rels: typeof relations_payload_locked_documents_rels
  relations_payload_locked_documents: typeof relations_payload_locked_documents
  relations_payload_preferences_rels: typeof relations_payload_preferences_rels
  relations_payload_preferences: typeof relations_payload_preferences
  relations_payload_migrations: typeof relations_payload_migrations
  relations_layout_blocks_header_block_actions: typeof relations_layout_blocks_header_block_actions
  relations_layout_blocks_header_block: typeof relations_layout_blocks_header_block
  relations_layout_blocks_footer_block_columns_links: typeof relations_layout_blocks_footer_block_columns_links
  relations_layout_blocks_footer_block_columns: typeof relations_layout_blocks_footer_block_columns
  relations_layout_blocks_footer_block: typeof relations_layout_blocks_footer_block
  relations_layout_branding_social_media_links: typeof relations_layout_branding_social_media_links
  relations_layout_locales: typeof relations_layout_locales
  relations_layout: typeof relations_layout
  relations__layout_v_blocks_header_block_actions: typeof relations__layout_v_blocks_header_block_actions
  relations__layout_v_blocks_header_block: typeof relations__layout_v_blocks_header_block
  relations__layout_v_blocks_footer_block_columns_links: typeof relations__layout_v_blocks_footer_block_columns_links
  relations__layout_v_blocks_footer_block_columns: typeof relations__layout_v_blocks_footer_block_columns
  relations__layout_v_blocks_footer_block: typeof relations__layout_v_blocks_footer_block
  relations__layout_v_version_branding_social_media_links: typeof relations__layout_v_version_branding_social_media_links
  relations__layout_v_locales: typeof relations__layout_v_locales
  relations__layout_v: typeof relations__layout_v
}

declare module '@payloadcms/db-postgres' {
  export interface GeneratedDatabaseSchema {
    schema: DatabaseSchema
  }
}
